{
  "version": 3,
  "sources": ["../../src/class/ODataServer.js", "../../src/tools.js", "../../src/class/Router.js", "../../src/class/Route.js", "../../src/meta/metadata.js", "../../src/meta/collections.js", "../../src/methods/query.js", "../../src/validations/queryTransform.js", "../../src/methods/insert.js", "../../src/methods/update.js", "../../src/methods/remove.js", "../../src/validations/prune.js", "../../src/index.js", "../../src/adapter/mongo.js", "../src/index.js"],
  "sourcesContent": ["import { parse as parseUrl } from \"url\";\r\nimport { EventEmitter } from \"events\";\r\nimport { Buffer } from \"safe-buffer\";\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nimport { escapeRegExp, vault } from \"../tools\";\r\n\r\n\r\nimport { Router } from \"./Router\";\r\nimport { prune } from '../validations/prune.js';\r\n\r\n\r\n\r\nconst { solid, virtual } = jet.prop;\r\n\r\nexport class ODataServer extends EventEmitter {\r\n  constructor(config={}) {\r\n    super();\r\n\r\n    const { url, model, cors, resolver } = config;\r\n\r\n    const [ uid, _p ] = vault.set({\r\n      url,\r\n      model,\r\n      cors,\r\n      routers:{},\r\n      resolver\r\n\r\n    });\r\n\r\n    solid.all(this, {\r\n      uid\r\n    }, false);\r\n\r\n    virtual.all(this, {\r\n      url:_=>_p.url,\r\n      model:_=>_p.model,\r\n      cors:_=>_p.cors\r\n    })\r\n\r\n    this.cfg = {\r\n      afterRead: function () {},\r\n\r\n      beforeQuery: function (col, query, req, cb) { cb() },\r\n      executeQuery: ODataServer.prototype.executeQuery.bind(this),\r\n\r\n      beforeInsert: function (col, query, req, cb) { cb() },\r\n      executeInsert: ODataServer.prototype.executeInsert.bind(this),\r\n\r\n      beforeUpdate: function (col, query, update, req, cb) { cb() },\r\n      executeUpdate: ODataServer.prototype.executeUpdate.bind(this),\r\n\r\n      beforeRemove: function (col, query, req, cb) { cb() },\r\n      executeRemove: ODataServer.prototype.executeRemove.bind(this),\r\n\r\n      base64ToBuffer: ODataServer.prototype.base64ToBuffer.bind(this),\r\n      bufferToBase64: ODataServer.prototype.bufferToBase64.bind(this),\r\n      pruneResults: ODataServer.prototype.pruneResults.bind(this),\r\n    }\r\n  }\r\n\r\n  async resolve(req, res) {\r\n    const _p = vault.get(this.uid);\r\n    if (!_p.url && !req.protocol) {\r\n      throw Error('Unable to determine server url from the request or value provided in the ODataServer constructor.')\r\n    }\r\n  \r\n    // If mounted in express, trim off the subpath (req.url) giving us just the base path\r\n    const path = (req.originalUrl || '/').replace(new RegExp(escapeRegExp(req.url) + '$'), '')\r\n    if (!_p.url) { _p.url = (req.protocol + '://' + req.get('host') + path); };\r\n  \r\n    const prefix = parseUrl(_p.url).pathname;\r\n    const router = _p.routers[prefix] || (_p.routers[prefix] = new Router(this, prefix)); //cache routers\r\n\r\n    solid(req, \"odata\", solid.all({}, { //create custom context space at request\r\n      ods:this,\r\n      router,\r\n      url:parseUrl(req.originalUrl || req.url, true)\r\n    })); \r\n    \r\n    return router.dispatch(req, res);\r\n  }\r\n\r\n  getHandler() {\r\n    return (req, res)=>{\r\n      this.resolve(req, res).catch(e=>{\r\n\r\n        //ods.emit('odata-error', e)\r\n        const error = {\r\n          code:e?.code || 500,\r\n          message: e?.msg || e?.message || \"Unknown error\",\r\n          stack: e?.stack,\r\n          target: req.url,\r\n          details: []\r\n        }\r\n\r\n        res.statusCode = error.code;\r\n        res.setHeader('Content-Type', 'application/json');\r\n\r\n        res.end(JSON.stringify({ error }))\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  insert(fn) {\r\n    this.cfg.insert = fn.bind(this)\r\n    return this\r\n  }\r\n  \r\n  beforeInsert(fn) {\r\n    if (fn.length === 3) {\r\n      console.warn('Listener function should accept request parameter.')\r\n      const origFn = fn\r\n      fn = function (col, doc, req, cb) {\r\n        origFn(col, doc, cb)\r\n      }\r\n    }\r\n  \r\n    this.cfg.beforeInsert = fn.bind(this)\r\n    return this\r\n  }\r\n\r\n  executeInsert(col, doc, req, cb) {\r\n    const self = this\r\n    this.cfg.beforeInsert(col, doc, req, function (err) {\r\n      if (err) {\r\n        return cb(err)\r\n      }\r\n  \r\n      self.cfg.insert(col, doc, req, cb)\r\n    })\r\n  }\r\n\r\n  update(fn) {\r\n    this.cfg.update = fn.bind(this)\r\n    return this\r\n  }\r\n\r\n  beforeUpdate(fn) {\r\n    if (fn.length === 4) {\r\n      console.warn('Listener function should accept request parameter.')\r\n      const origFn = fn\r\n      fn = function (col, query, update, req, cb) {\r\n        origFn(col, query, update, cb)\r\n      }\r\n    }\r\n  \r\n    this.cfg.beforeUpdate = fn.bind(this)\r\n    return this\r\n  }\r\n\r\n  executeUpdate(col, query, update, req, cb) {\r\n    const self = this\r\n  \r\n    this.cfg.beforeUpdate(col, query, update, req, function (err) {\r\n      if (err) {\r\n        return cb(err)\r\n      }\r\n  \r\n      self.cfg.update(col, query, update, req, cb)\r\n    })\r\n  }\r\n\r\n  remove(fn) {\r\n    this.cfg.remove = fn.bind(this)\r\n    return this\r\n  }\r\n\r\n  beforeRemove(fn) {\r\n    if (fn.length === 3) {\r\n      console.warn('Listener function should accept request parameter.')\r\n      const origFn = fn\r\n      fn = function (col, query, req, cb) {\r\n        origFn(col, query, cb)\r\n      }\r\n    }\r\n  \r\n    this.cfg.beforeRemove = fn.bind(this)\r\n    return this\r\n  }\r\n\r\n  executeRemove(col, query, req, cb) {\r\n    const self = this\r\n    this.cfg.beforeRemove(col, query, req, function (err) {\r\n      if (err) {\r\n        return cb(err)\r\n      }\r\n  \r\n      self.cfg.remove(col, query, req, cb)\r\n    })\r\n  }\r\n\r\n  afterRead(fn) {\r\n    this.cfg.afterRead = fn\r\n    return this\r\n  }\r\n\r\n  pruneResults(collection, res) {\r\n    prune(this, collection, res)\r\n  }\r\n\r\n  base64ToBuffer(collection, doc) {\r\n    const model = this.model\r\n    const entitySet = model.entitySets[collection]\r\n    const entityType = model.entityTypes[entitySet.entityType.replace(model.namespace + '.', '')]\r\n  \r\n    for (const prop in doc) {\r\n      if (!prop) {\r\n        continue\r\n      }\r\n  \r\n      const propDef = entityType[prop]\r\n  \r\n      if (!propDef) {\r\n        continue\r\n      }\r\n  \r\n      if (propDef.type === 'Edm.Binary') {\r\n        doc[prop] = Buffer.from(doc[prop], 'base64')\r\n      }\r\n    }\r\n  }\r\n\r\n  bufferToBase64(collection, res) {\r\n    const model = this.model\r\n    const entitySet = model.entitySets[collection]\r\n    const entityType = model.entityTypes[entitySet.entityType.replace(model.namespace + '.', '')]\r\n  \r\n    for (const i in res) {\r\n      const doc = res[i]\r\n      for (const prop in doc) {\r\n        if (!prop) {\r\n          continue\r\n        }\r\n  \r\n        const propDef = entityType[prop]\r\n  \r\n        if (!propDef) {\r\n          continue\r\n        }\r\n  \r\n        if (propDef.type === 'Edm.Binary') {\r\n          // nedb returns object instead of buffer on node 4\r\n          if (!Buffer.isBuffer(doc[prop]) && !doc[prop].length) {\r\n            let obj = doc[prop]\r\n            obj = obj.data || obj\r\n            doc[prop] = Object.keys(obj).map(function (key) { return obj[key] })\r\n          }\r\n  \r\n          // unwrap mongo style buffers\r\n          if (doc[prop]._bsontype === 'Binary') {\r\n            doc[prop] = doc[prop].buffer\r\n          }\r\n  \r\n          doc[prop] = Buffer.from(doc[prop]).toString('base64')\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n", "\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nexport const vault = jet.vault(\"ODataServer\");\r\n\r\n\r\nexport const escapeRegExp = str=>str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');", "import methods from 'methods';\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nimport { Route } from \"./Route.js\";\r\n\r\nimport { buildMetadata } from '../meta/metadata.js';\r\nimport { getCollections } from '../meta/collections.js';\r\n\r\nimport { query } from '../methods/query.js';\r\nimport { insert } from '../methods/insert.js';\r\nimport { update } from '../methods/update.js';\r\nimport { remove } from '../methods/remove.js';\r\n\r\nconst { solid, virtual } = jet.prop;\r\n\r\nexport class Router {\r\n  constructor(ods, prefix) {\r\n    solid.all(this, {\r\n      ods,\r\n    }, false);\r\n\r\n    solid.all(this, {\r\n      prefix,\r\n      routes:{}\r\n    })\r\n\r\n    this.get('/', (req, res) => {\r\n      const result = getCollections(ods);\r\n\r\n      res.statusCode = 200;\r\n      res.setHeader('Content-Type', 'application/json');\r\n\r\n      return result;\r\n    });\r\n\r\n    this.get('/\\$metadata', (req, res) => {\r\n      const result = buildMetadata(ods.cfg);\r\n\r\n      res.statusCode = 200;\r\n      res.setHeader('Content-Type', 'application/xml');\r\n      res.setHeader('DataServiceVersion', '4.0');\r\n      res.setHeader('OData-Version', '4.0');\r\n\r\n      return result;\r\n    });\r\n\r\n    this.get('/:collection/\\$count', (req, res) => {\r\n      solid(req.odata.params, \"$count\", true);\r\n      return query(req, res);\r\n    });\r\n    this.get('/:collection\\\\(:id\\\\)', query);\r\n    this.get('/:collection', query);\r\n\r\n    this.patch('/:collection\\\\(:id\\\\)', (req, res) => { return update(ods, req, res) });\r\n    this.delete('/:collection\\\\(:id\\\\)', remove);\r\n    this.post('/:collection', (req, res) => { return insert(ods, req, res) });\r\n\r\n    if (ods.cors) {\r\n      this.options('/(.*)', (req, res) => {\r\n        res.statusCode = 200\r\n        res.setHeader('Access-Control-Allow-Origin', ods.cors)\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  async dispatch(req, res) {\r\n    const method = req.method.toLowerCase()\r\n\r\n    for (const route of this.routes[method]) {\r\n      if (await route.resolve(req, res)) { return true; }\r\n    }\r\n\r\n    throw Error({code:404, msg:\"Not found\"});\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nmethods.forEach(method => {\r\n  Router.prototype[method] = function (path, exe) {\r\n    const list = this.routes[method] || (this.routes[method] = []);\r\n    const route = new Route(this, path, exe);\r\n    list.push(route);\r\n    return route;\r\n  }\r\n});", "import { pathToRegexp } from 'path-to-regexp';\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nconst { solid, cached, virtual } = jet.prop;\r\n\r\nexport class Route {\r\n    constructor(router, path, resolver) {\r\n\r\n        const keys = [];\r\n\r\n        solid.all(this, {\r\n            router,\r\n            resolver\r\n        }, false);\r\n\r\n        cached(this, {}, \"regex\", _=>pathToRegexp(path, keys), false);\r\n        virtual(this, \"keys\", _=>{ this.regex; return keys; }, false);\r\n\r\n        solid(this, \"path\", path);\r\n\r\n    }\r\n\r\n    decodeParam(param) { return param && decodeURIComponent(param); }\r\n\r\n    parseParams(pathname) {\r\n        const { regex, keys } = this;\r\n        const ex = regex.exec(pathname);\r\n\r\n        if (!ex) { return; }\r\n        const params = {};\r\n\r\n        for (let i = 0; i < keys.length; i++) {\r\n            solid(params, keys[i].name, this.decodeParam(ex[i + 1]));\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    async resolve(req, res) {\r\n        const params = this.parseParams(req.odata.url.pathname);\r\n\r\n        if (!params) { return false; }\r\n\r\n        req.params = params;\r\n        solid.all(req.odata, {\r\n            route:this,\r\n            params,\r\n        });\r\n\r\n        this.addCorsToResponse(res);\r\n\r\n        const result = await this.resolver(req, res);\r\n        \r\n        res.end(result);\r\n        \r\n        return true;\r\n    }\r\n\r\n    addCorsToResponse(res) {\r\n        const cors = this.router.ods.cors; \r\n        if (cors) { res.setHeader('Access-Control-Allow-Origin', cors); }\r\n    }\r\n\r\n}", "\r\nimport builder from 'xmlbuilder';\r\n\r\nexport const buildMetadata = ({model})=>{\r\n  const entityTypes = []\r\n  for (const typeKey in model.entityTypes) {\r\n    const entityType = {\r\n      '@Name': typeKey,\r\n      Property: []\r\n    }\r\n\r\n    for (const propKey in model.entityTypes[typeKey]) {\r\n      const property = model.entityTypes[typeKey][propKey]\r\n      const finalObject = { '@Name': propKey, '@Type': property.type }\r\n      if (Object.prototype.hasOwnProperty.call(property, 'nullable')) {\r\n        finalObject['@Nullable'] = property.nullable\r\n      }\r\n      entityType.Property.push(finalObject)\r\n\r\n      if (property.key) {\r\n        entityType.Key = {\r\n          PropertyRef: {\r\n            '@Name': propKey\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    entityTypes.push(entityType)\r\n  }\r\n\r\n  const complexTypes = []\r\n  for (const typeKey in model.complexTypes) {\r\n    const complexType = {\r\n      '@Name': typeKey,\r\n      Property: []\r\n    }\r\n\r\n    for (const propKey in model.complexTypes[typeKey]) {\r\n      const property = model.complexTypes[typeKey][propKey]\r\n\r\n      complexType.Property.push({ '@Name': propKey, '@Type': property.type })\r\n    }\r\n\r\n    complexTypes.push(complexType)\r\n  }\r\n\r\n  const container = {\r\n    '@Name': 'Context',\r\n    EntitySet: []\r\n  }\r\n\r\n  for (const setKey in model.entitySets) {\r\n    container.EntitySet.push({\r\n      '@EntityType': model.entitySets[setKey].entityType,\r\n      '@Name': setKey\r\n    })\r\n  }\r\n\r\n  const returnObject = {\r\n    'edmx:Edmx': {\r\n      '@xmlns:edmx': 'http://docs.oasis-open.org/odata/ns/edmx',\r\n      '@Version': '4.0',\r\n      'edmx:DataServices': {\r\n        Schema: {\r\n          '@xmlns': 'http://docs.oasis-open.org/odata/ns/edm',\r\n          '@Namespace': model.namespace,\r\n          EntityType: entityTypes,\r\n          EntityContainer: container\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (complexTypes.length) {\r\n    returnObject['edmx:Edmx']['edmx:DataServices'].Schema.ComplexType = complexTypes\r\n  }\r\n\r\n  return builder.create(returnObject).end({ pretty: true })\r\n}\r\n", "export const getCollections = ods=>{\r\n  const collections = [];\r\n\r\n  for (const key in ods.model.entitySets) {\r\n    collections.push({\r\n      kind: 'EntitySet',\r\n      name: key,\r\n      url: key,\r\n    });\r\n  }\r\n\r\n  return JSON.stringify({\r\n    '@odata.context': `${ods.url}/$metadata`,\r\n    value: collections,\r\n  });\r\n}", "import parser from 'odata-parser';\r\nimport querystring from 'querystring';\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nimport { queryTransform } from '../validations/queryTransform.js';\r\nimport { vault } from '../tools.js';\r\n\r\nconst { solid } = jet.prop;\r\n\r\n\r\nconst _allowedQueryOptions = ['$', '$expand', '$filter', '$format', '$inlinecount', '$select', '$skip', '$top', '$orderby'];\r\nconst parseOptions = (url, params) => {\r\n  const query = url.query;\r\n\r\n  let r = { $filter: {} };\r\n\r\n  if (url.search) {\r\n    const queryValid = {}\r\n    for (const opt of _allowedQueryOptions) {\r\n      if (query[opt]) { queryValid[opt] = query[opt]; }\r\n    }\r\n\r\n    const encodedQS = decodeURIComponent(querystring.stringify(queryValid));\r\n    if (encodedQS) { r = queryTransform(parser.parse(encodedQS)); }\r\n    if (query.$count) { r.$inlinecount = true; }\r\n  }\r\n\r\n  r.collection = params.collection;\r\n\r\n  if (params.id) { r.$filter._id = params.id.replace(/[\"']/g, ''); }\r\n\r\n  return r;\r\n}\r\n\r\n\r\nexport const query = async (req, res) => {\r\n  const { ods, params, url } = req.odata;\r\n  const { resolver } = vault.get(ods.uid);\r\n  const { collection } = params;\r\n\r\n  if (!ods.model.entitySets[collection]) {\r\n    const error = new Error('Entity set not Found');\r\n    error.code = 404;\r\n    res.odataError(error);\r\n    return;\r\n  }\r\n\r\n  const queryOptions = parseOptions(url, params);\r\n\r\n  const result = await resolver(\"query\", req);\r\n\r\n  res.statusCode = 200\r\n  res.setHeader('Content-Type', 'application/json;odata.metadata=minimal')\r\n  res.setHeader('OData-Version', '4.0')\r\n\r\n  let out = {}\r\n  // define the @odataContext in case of selection\r\n  let sAdditionIntoContext = ''\r\n  const oSelect = queryOptions.$select\r\n  \r\n  if (oSelect) {\r\n    const countProp = Object.keys(oSelect).length\r\n    let ctr = 1\r\n    for (const key in oSelect) {\r\n      sAdditionIntoContext += key.toString() + (ctr < countProp ? ',' : '')\r\n      ctr++\r\n    }\r\n  }\r\n\r\n  if (Object.prototype.hasOwnProperty.call(queryOptions.$filter, '_id')) {\r\n    sAdditionIntoContext = sAdditionIntoContext.length > 0 ? '(' + sAdditionIntoContext + ')/$entity' : '/$entity'\r\n    out['@odata.context'] = ods.url + '/$metadata#' + collection + sAdditionIntoContext\r\n    if (result.length > 0) {\r\n      for (const key in result[0]) {\r\n        out[key] = result[0][key]\r\n      }\r\n    }\r\n    // this shouldn't be done, but for backcompatibility we keep it for now\r\n    out.value = result\r\n  } else {\r\n    sAdditionIntoContext = sAdditionIntoContext.length > 0 ? '(' + sAdditionIntoContext + ')' : ''\r\n    out = {\r\n      '@odata.context': ods.url + '/$metadata#' + collection + sAdditionIntoContext,\r\n      value: result\r\n    }\r\n  }\r\n\r\n  if (queryOptions.$inlinecount) {\r\n    out['@odata.count'] = result.count\r\n    out.value = result.value\r\n  }\r\n\r\n  ods.pruneResults(collection, out.value);\r\n  ods.bufferToBase64(collection, out.value);\r\n\r\n  return JSON.stringify(out);\r\n}\r\n", "\r\nconst substringof = (node, result) => {\r\n  const prop = node.args[0].type === 'property' ? node.args[0] : node.args[1];\r\n  const lit = node.args[0].type === 'literal' ? node.args[0] : node.args[1];\r\n\r\n  result[prop.name] = new RegExp(lit.value);\r\n}\r\n\r\nclass Node {\r\n  constructor(type, left, right, func, args) {\r\n    this.type = type;\r\n    this.left = left;\r\n    this.right = right;\r\n    this.func = func;\r\n    this.args = args;\r\n  }\r\n\r\n  _prop(result, left, rightValue) {\r\n    if (left.type === 'property' && left.name.indexOf('/') !== -1) {\r\n      const fragments = left.name.split('/')\r\n      const obj = result[fragments[0]] || {}\r\n  \r\n      for (let i = 1; i < fragments.length; i++) {\r\n        if (i === (fragments.length - 1)) {\r\n          obj[fragments[i]] = rightValue\r\n        } else {\r\n          obj[fragments[i]] = obj[fragments[i]] || {}\r\n        }\r\n      }\r\n  \r\n      result[fragments[0]] = obj\r\n    } else {\r\n      result[left.name] = rightValue\r\n    }\r\n  }\r\n\r\n  transform() {\r\n    const result = {}\r\n  \r\n    if (this.type === 'eq' && this.right.type === 'literal') {\r\n      // odata parser returns ['null', ''] for a filter with \"field eq null\"\r\n      // we handle the case by fixing the query in case this happens\r\n      if (\r\n        Array.isArray(this.right.value) &&\r\n        this.right.value.length === 2 &&\r\n        this.right.value[0] === 'null' &&\r\n        this.right.value[1] === ''\r\n      ) {\r\n        this._prop(result, this.left, null)\r\n      } else {\r\n        this._prop(result, this.left, this.right.value)\r\n      }\r\n    }\r\n  \r\n    if (this.type === 'lt' && this.right.type === 'literal') {\r\n      this._prop(result, this.left, { $lt: this.right.value })\r\n    }\r\n  \r\n    if (this.type === 'gt' && this.right.type === 'literal') {\r\n      this._prop(result, this.left, { $gt: this.right.value })\r\n    }\r\n  \r\n    if (this.type === 'le' && this.right.type === 'literal') {\r\n      this._prop(result, this.left, { $lte: this.right.value })\r\n    }\r\n  \r\n    if (this.type === 'ge' && this.right.type === 'literal') {\r\n      this._prop(result, this.left, { $gte: this.right.value })\r\n    }\r\n  \r\n    if (this.type === 'ne' && this.right.type === 'literal') {\r\n      // odata parser returns ['null', ''] for a filter with \"field eq null\"\r\n      // we handle the case by fixing the query in case this happens\r\n      if (\r\n        Array.isArray(this.right.value) &&\r\n        this.right.value.length === 2 &&\r\n        this.right.value[0] === 'null' &&\r\n        this.right.value[1] === ''\r\n      ) {\r\n        this._prop(result, this.left, { $ne: null })\r\n      } else {\r\n        this._prop(result, this.left, { $ne: this.right.value })\r\n      }\r\n    }\r\n  \r\n    if (this.type === 'and') {\r\n      result.$and = result.$and || []\r\n      result.$and.push(new Node(this.left.type, this.left.left, this.left.right, this.func, this.args).transform())\r\n      result.$and.push(new Node(this.right.type, this.right.left, this.right.right, this.func, this.args).transform())\r\n    }\r\n  \r\n    if (this.type === 'or') {\r\n      result.$or = result.$or || []\r\n      result.$or.push(new Node(this.left.type, this.left.left, this.left.right, this.func, this.args).transform())\r\n      result.$or.push(new Node(this.right.type, this.right.left, this.right.right, this.func, this.args).transform())\r\n    }\r\n  \r\n    if (this.type === 'functioncall') {\r\n      switch (this.func) {\r\n        case 'substringof': substringof(this, result)\r\n      }\r\n    }\r\n  \r\n    return result\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport const queryTransform = (query) => {\r\n  if (query.$filter) {\r\n    query.$filter = new Node(query.$filter.type, query.$filter.left, query.$filter.right, query.$filter.func, query.$filter.args).transform()\r\n  } else {\r\n    query.$filter = {}\r\n  }\r\n\r\n  if (query.$top) {\r\n    query.$limit = query.$top\r\n  }\r\n\r\n  if (query.$orderby) {\r\n    query.$sort = {}\r\n    query.$orderby.forEach(function (prop) {\r\n      const propName = Object.keys(prop)[0]\r\n      query.$sort[propName] = prop[propName] === 'desc' ? -1 : 1\r\n    })\r\n  }\r\n\r\n  if (query.$inlinecount === 'allpages') {\r\n    query.$count = true\r\n  }\r\n\r\n  const select = {}\r\n  for (const key in query.$select || []) {\r\n    select[query.$select[key]] = 1\r\n  }\r\n  query.$select = select\r\n\r\n  return query\r\n}", "const keys = (o) => {\r\n  const res = [];\r\n  const k = Object.keys(o);\r\n  for (const i in k) {\r\n    if (k[i].lastIndexOf('@', 0) === 0) {\r\n      res.splice(0, 0, k[i]);\r\n    } else {\r\n      res.push(k[i]);\r\n    }\r\n  }\r\n  return res;\r\n};\r\n\r\nconst sortProperties = (o) => {\r\n  const res = {};\r\n  const props = keys(o);\r\n\r\n  for (let i = 0; i < props.length; i++) {\r\n    res[props[i]] = o[props[i]];\r\n  }\r\n  return res;\r\n};\r\n\r\nconst removeOdataType = (doc) => {\r\n  if (doc instanceof Array) {\r\n    for (const i in doc) {\r\n      if (typeof doc[i] === 'object' && doc[i] !== null) {\r\n        removeOdataType(doc[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  delete doc['@odata.type'];\r\n\r\n  for (const prop in doc) {\r\n    if (typeof doc[prop] === 'object' && doc[prop] !== null) {\r\n      removeOdataType(doc[prop]);\r\n    }\r\n  }\r\n};\r\n\r\nconst processBody = (data, {cfg, url}, req, res) => {\r\n  try {\r\n    removeOdataType(data);\r\n    cfg.base64ToBuffer(req.params.collection, data);\r\n    cfg.executeInsert(req.params.collection, data, req, (err, entity) => {\r\n      if (err) {\r\n        return res.odataError(err);\r\n      }\r\n\r\n      res.statusCode = 201;\r\n      res.setHeader('Content-Type', 'application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=false;charset=utf-8');\r\n      res.setHeader('OData-Version', '4.0');\r\n      res.setHeader('Location', url + '/' + req.params.collection + \"/('\" + encodeURI(entity._id) + \"')\");\r\n\r\n      cfg.pruneResults(req.params.collection, entity);\r\n\r\n      // odata.context must be first\r\n      entity['@odata.id'] = url + '/' + req.params.collection + \"('\" + entity._id + \"')\";\r\n      entity['@odata.editLink'] = url + '/' + req.params.collection + \"('\" + entity._id + \"')\";\r\n      entity['@odata.context'] = url + '/$metadata#' + req.params.collection + '/$entity';\r\n\r\n      entity = sortProperties(entity);\r\n      cfg.bufferToBase64(req.params.collection, [entity]);\r\n\r\n      return JSON.stringify(entity);\r\n    });\r\n  } catch (e) {\r\n    res.odataError(e);\r\n  }\r\n};\r\n\r\nexport const insert = (ods, req, res) => {\r\n  if (req.body) {\r\n    return processBody(req.body, ods, req, res);\r\n  }\r\n\r\n  let body = '';\r\n  req.on('data', (data) => {\r\n    body += data;\r\n    if (body.length > 1e6) {\r\n      req.connection.destroy();\r\n    }\r\n  });\r\n  \r\n  req.on('end', () => {\r\n    return processBody(JSON.parse(body), ods, req, res);\r\n  });\r\n};\r\n", "const removeOdataType = (doc) => {\r\n  if (doc instanceof Array) {\r\n    for (const i in doc) {\r\n      if (typeof doc[i] === 'object' && doc[i] !== null) {\r\n        removeOdataType(doc[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  delete doc['@odata.type'];\r\n\r\n  for (const prop in doc) {\r\n    if (typeof doc[prop] === 'object' && doc[prop] !== null) {\r\n      removeOdataType(doc[prop]);\r\n    }\r\n  }\r\n};\r\n\r\nconst processBody = (body, {cfg}, req, res) => {\r\n  removeOdataType(body);\r\n\r\n  const query = {\r\n    _id: req.params.id.replace(/\\\"/g, '').replace(/'/g, '')\r\n  };\r\n\r\n  const update = {\r\n    $set: body\r\n  };\r\n\r\n  try {\r\n    cfg.base64ToBuffer(req.params.collection, update.$set);\r\n    cfg.executeUpdate(req.params.collection, query, update, req, (e, entity) => {\r\n      if (e) {\r\n        return res.odataError(e);\r\n      }\r\n\r\n      res.statusCode = 204;\r\n      \r\n    });\r\n  } catch (e) {\r\n    res.odataError(e);\r\n  }\r\n};\r\n\r\nexport const update = (ods, req, res) => {\r\n  if (req.body) {\r\n    return processBody(req.body, ods, req, res);\r\n  }\r\n  let body = '';\r\n  req.on('data', (data) => {\r\n    body += data;\r\n    if (body.length > 1e6) {\r\n      req.connection.destroy();\r\n    }\r\n  });\r\n  req.on('end', () => {\r\n    return processBody(JSON.parse(body), ods, req, res);\r\n  });\r\n};\r\n", "export const remove = async (req, res) => {\r\n  const { ods, params, url } = req.odata;\r\n  const { resolver } = vault.get(ods.uid);\r\n\r\n  const query = {\r\n    _id: req.params.id.replace(/\\\"/g, '').replace(/'/g, '')\r\n  }\r\n\r\n  await resolver(\"remove\", req);\r\n\r\n  res.statusCode = 204;\r\n  \r\n};", "\r\nconst _prune = (doc, model, type) => {\r\n  if (doc instanceof Array) {\r\n    for (const i in doc) {\r\n      _prune(doc[i], model, type)\r\n    }\r\n    return;\r\n  }\r\n\r\n  for (const prop in doc) {\r\n    if (!prop || doc[prop] === undefined || prop.toString().substring(0, 6) === '@odata') {\r\n      continue;\r\n    }\r\n\r\n    const propDef = type[prop];\r\n\r\n    if (!propDef) {\r\n      delete doc[prop];\r\n      continue;\r\n    }\r\n\r\n    if (propDef.type.indexOf('Collection') === 0) {\r\n      if (propDef.type.indexOf('Collection(Edm') === 0) {\r\n        continue;\r\n      }\r\n      let complexTypeName = propDef.type.replace('Collection(' + model.namespace + '.', '');\r\n      complexTypeName = complexTypeName.substring(0, complexTypeName.length - 1);\r\n      const complexType = model.complexTypes[complexTypeName];\r\n      if (!complexType) {\r\n        throw new Error(`Complex type ${complexTypeName} was not found.`);\r\n      }\r\n\r\n      for (const i in doc[prop]) {\r\n        _prune(doc[prop][i], model, complexType);\r\n      }\r\n      continue;\r\n    }\r\n\r\n    if (propDef.type.indexOf('Edm') !== 0) {\r\n      const complexTypeName = propDef.type.replace(model.namespace + '.', '');\r\n      const complexType = model.complexTypes[complexTypeName];\r\n      if (!complexType) {\r\n        throw new Error(`Complex type ${complexTypeName} was not found.`);\r\n      }\r\n      _prune(doc[prop], model, complexType);\r\n    }\r\n  }\r\n};\r\n\r\nexport const prune = ({model}, collection, docs) => {\r\n  const entitySet = model.entitySets[collection];\r\n  const entityType = model.entityTypes[entitySet.entityType.replace(model.namespace + '.', '')];\r\n\r\n  _prune(docs, model, entityType);\r\n};", "import { ODataServer } from \"./class/ODataServer.js\";\r\nimport { buildMetadata } from \"./meta/metadata.js\";\r\nimport { prune } from \"./validations/prune.js\";\r\nimport { queryTransform } from \"./validations/queryTransform.js\";\r\n\r\nexport default (options)=>new ODataServer(options);\r\n\r\nexport {\r\n    queryTransform,\r\n    buildMetadata,\r\n    prune\r\n}\r\n", "import { MongoClient, ObjectId } from \"mongodb\";\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nconst { solid, cached } = jet.prop;\r\n\r\nconst _methodsArgs = {\r\n    update: [\"collectionName\", \"query\", \"data\", \"request\", \"callback\"],\r\n    remove: [\"collectionName\", \"query\", \"request\", \"callback\"],\r\n    insert: [\"collectionName\", \"data\", \"request\", \"callback\"],\r\n    query: [\"collectionName\", \"query\", \"request\", \"callback\"]\r\n};\r\n\r\nconst _fetchContext = (methodName, args) => {\r\n    const context = solid.all({}, { methodName });\r\n    const methodArgs = _methodsArgs[methodName];\r\n\r\n    for (let k in methodArgs) {\r\n        const arg = args[k];\r\n        const argName = methodArgs[k];\r\n        const enumerable = (argName !== \"request\" && argName !== \"callback\");\r\n        solid(context, argName, arg, enumerable);\r\n    }\r\n\r\n    return context;\r\n}\r\n\r\nconst _hexTest = /^[0-9A-Fa-f]{24}$/;\r\nconst _convertStringsToObjectIds = o => {\r\n    if (!Object.jet.is(o)) { return o; }\r\n\r\n    for (var i in o) {\r\n        if (i === '_id' && String.jet.is(o[i]) && _hexTest.test(o[i])) { o[i] = new ObjectId(o[i]); }\r\n        else { o[i] = _convertStringsToObjectIds(o[i]); }\r\n    }\r\n\r\n    return o;\r\n};\r\n\r\nconst update = async (collection, { query, data }) => {\r\n    if (data.$set) { delete data.$set._id; } //idk why, it was in source code\r\n\r\n    const res = await collection.updateOne(query, data);\r\n\r\n    if (res.matchedCount !== 1) { throw Error('Update not successful'); }\r\n\r\n    return res.matchedCount;\r\n}\r\n\r\nconst remove = async (collection, { query }) => {\r\n\r\n    const res = await collection.deleteOne(query);\r\n\r\n    if (res.deletedCount !== 1) { throw Error('Remove not successful'); }\r\n\r\n    return res.deletedCount;\r\n\r\n}\r\n\r\nconst insert = async (collection, { data }) => {\r\n\r\n    const value = await collection.insertOne(data);\r\n\r\n    return collection.findOne({ _id: value.insertedId });\r\n\r\n}\r\n\r\nconst query = async (collection, { query }) => {\r\n\r\n    let qr = collection.find(query.$filter, { projection: query.$select || {} });\r\n\r\n    if (query.$sort) { qr = qr.sort(query.$sort); }\r\n    if (query.$skip) { qr = qr.skip(query.$skip); }\r\n    if (query.$limit) { qr = qr.limit(query.$limit); }\r\n    if (query.$count) { return qr.count(); }\r\n\r\n    const value = await qr.toArray();\r\n\r\n    if (!query.$inlinecount) { return value; }\r\n\r\n    const count = await collection.find(query.$filter).count();\r\n\r\n    return { count, value };\r\n\r\n}\r\n\r\nconst _methods = { update, remove, query, insert };\r\n\r\nexport default getDB=>{\r\n    \r\n    return async (methodName, req)=>{\r\n        const method = _methods[methodName];\r\n        if (!method) { throw Error(`Unknown method '${methodName}'`); }\r\n\r\n        //const { collectionName, query, data, callback } = context;\r\n        const db = await getDB();\r\n        //const collection = db.collection(collectionName);\r\n    \r\n        //_convertStringsToObjectIds(query);\r\n        //_convertStringsToObjectIds(data);\r\n    \r\n        //return method(collection, req);\r\n    }\r\n\r\n}\r\n", "import ODataServer from \"../../dist/index.js\";\r\nimport mongoAdapter from \"../../dist/adapter/mongo.js\";\r\n\r\nimport { MongoClient } from \"mongodb\";\r\nimport http from \"http\";\r\n\r\nconst _mongos = {};\r\nconst _protocolSuffix = /:\\/\\//;\r\n\r\n\r\nconst getMongo = async (dbUrl, options)=>{\r\n    dbUrl = dbUrl || \"localhost:27017\";\r\n\r\n    if (!_protocolSuffix.test(dbUrl)) { dbUrl = \"mongodb://\" + dbUrl; }\r\n\r\n    if (_mongos[dbUrl]) { return _mongos[dbUrl]; }\r\n    const mongo = _mongos[dbUrl] = await MongoClient.connect(dbUrl, options);\r\n    mongo.on(\"close\", _=>{ delete _mongos[dbUrl]; });\r\n\r\n    return mongo;\r\n}\r\n\r\nconst model = {\r\n    namespace: \"piapmo\",\r\n    entityTypes: {\r\n        \"UserType\": {\r\n            \"_id\": {\"type\": \"Edm.String\", key: true},\r\n            \"test\": {\"type\": \"Edm.String\"},            \r\n        },\r\n        \"DebugRequestType\":{\r\n            \"at\": {\"type\": \"Edm.DateTime\"},\r\n            \"method\": {\"type\": \"Edm.String\"},\r\n            \"path\": {\"type\": \"Edm.String\"},\r\n            \"query\": {\"type\": \"Edm.String\"},\r\n            \"headers\": {\"type\": \"Edm.String\"},\r\n            \"body\": {\"type\": \"Edm.String\"}\r\n        }\r\n    },   \r\n    entitySets: {\r\n        \"users\": {\r\n            entityType: \"piapmo.UserType\"\r\n        },\r\n        \"_debug_requests\":{\r\n            entityType: \"piapmo.DebugRequestType\"\r\n        }\r\n    }\r\n};\r\n\r\nexport const mongoApi = ODataServer({\r\n    url:'http://localhost:1337',\r\n    model,\r\n    resolver:mongoAdapter(async _=>(await getMongo()).db(\"piapmo\")),\r\n});\r\n\r\n\r\nhttp.createServer(mongoApi.getHandler()).listen(1337);"],
  "mappings": "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",
  "names": ["jet", "vault", "keys", "model", "query", "solid", "removeOdataType", "processBody", "update", "virtual", "jet", "solid", "cached", "update", "query", "remove", "insert", "MongoClient"]
}
