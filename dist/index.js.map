{
  "version": 3,
  "sources": ["../src/class/Server.js", "../src/tools.js", "../src/class/Route.js", "../src/actions/resolvers/collections.js", "../src/actions/resolvers/cors.js", "../src/actions/resolvers/count.js", "../src/actions/resolvers/insert.js", "../src/actions/resolvers/metadata.js", "../src/actions/resolvers/query.js", "../src/actions/resolvers/remove.js", "../src/actions/resolvers/update.js", "import-glob:./resolvers/**", "../src/actions/index.js", "../src/class/Model.js", "../src/class/ModelProp.js", "../src/consts.js", "../src/class/ModelEntity.js", "../src/parsers/types.js", "../src/class/Gateway.js", "../src/class/Context.js", "../src/parsers/options.js", "../src/converters.js", "../src/index.js"],
  "sourcesContent": ["\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nimport { parseUrl, trimUrl, unwrap, vault } from \"../tools\";\r\n\r\nimport { Route } from \"./Route\";\r\n\r\nimport { Model } from \"./Model\";\r\nimport { Gateway } from \"./Gateway\";\r\n\r\nconst { solid, cached } = jet.prop;\r\n\r\nexport class Server {\r\n  constructor(options={}) {\r\n\r\n    const { model, cors, converter, onError } = options;\r\n\r\n    const _p = {\r\n      routes:{},\r\n    }\r\n\r\n    vault.set(this, _p);\r\n\r\n    solid(this, \"cors\", String.jet.to(cors));\r\n\r\n    cached.all(this, _p, {\r\n      _model:async _=>new Model(this, await (jet.isRunnable(model) ? model() : model), converter)\r\n    }, false);\r\n\r\n    solid.all(this, {\r\n      serve:(responder, url, ...extendArgs)=>{\r\n        const gw = new Gateway(this, url, options, extendArgs);\r\n        return (...a)=>gw.resolve(responder(...a));\r\n      },\r\n      onError:jet.isRunnable(onError) ? onError : ()=>{}\r\n    }, false);\r\n\r\n    this.addRoute(\"get\", '/', \"collections\");\r\n    this.addRoute(\"get\", '/\\$metadata', \"metadata\");\r\n\r\n    this.addRoute(\"get\", '/:entity/\\$count', \"count\");\r\n    this.addRoute(\"get\", '/:entity\\\\(:id\\\\)', \"query\");\r\n    this.addRoute(\"get\", '/:entity', \"query\");\r\n\r\n    this.addRoute(\"delete\", '/:entity\\\\(:id\\\\)', \"remove\");\r\n    this.addRoute(\"patch\", '/:entity\\\\(:id\\\\)', \"update\");\r\n    this.addRoute(\"post\", '/:entity', \"insert\");\r\n\r\n    if (this.cors) { this.addRoute(\"options\", '/(.*)', \"cors\"); }\r\n\r\n  }\r\n\r\n  msg(text) {\r\n    return \"OData server \" + text;\r\n  }\r\n\r\n  addRoute(method, path, action) {\r\n    const { routes } = vault.get(this);\r\n    const list = routes[method] || (routes[method] = []);\r\n    const route = new Route(this, method, path, action);\r\n    list.push(route);\r\n    return route;\r\n  }\r\n\r\n  findRoute(method, path) {\r\n    const _p = vault.get(this);\r\n    const routes = _p.routes[method] || [];\r\n\r\n    for (const route of routes) {\r\n      if (route.test(path)) { return route; }\r\n    }\r\n\r\n    throw { code: 404, msg: \"Not found\" };\r\n  }\r\n\r\n  async fetchModel() {\r\n    return this._model;\r\n  }\r\n\r\n}\r\n", "\r\nimport { parse as urlParser } from \"url\";\r\nimport builder from 'xmlbuilder';\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nconst { solid } = jet.prop;\r\n\r\nexport const vault = new WeakMap();\r\n\r\n\r\nexport const withBrackets = (val, quote=\"\")=>{\r\n    const str = String.jet.to(val, quote+\",\"+quote);\r\n    return str ? \"(\"+quote+str+quote+\")\" : \"\";\r\n}\r\n\r\nexport const getScope = (entity, ids, quote=\"\")=>entity + withBrackets(ids, quote);\r\nexport const getScopeMeta = (entity, ids, quote=\"\")=>\"$metadata#\"+getScope(entity, ids, quote);\r\n\r\n\r\nexport const isWrapped = (str, prefix=\"\", suffix=\"\")=>typeof str === \"string\" ? str.startsWith(prefix) && str.endsWith(suffix) : false;\r\nexport const unwrap = (str, prefix=\"\", suffix=\"\")=>isWrapped(str = String.jet.to(str), prefix, suffix) ? str.slice(prefix.length, str.length - suffix.length) : \"\";\r\n\r\nexport const trimUrl = pathname=>pathname.endsWith(\"/\") ? pathname.slice(0, pathname.length-1) : pathname;\r\n\r\nexport const parseUrl = (url, parseQueryString=false)=>{\r\n    url = urlParser(String.jet.to(url) || \"/\", parseQueryString);\r\n    solid(url, \"base\", ((!url.host ? \"\" : (!url.protocol ? \"\" : url.protocol+\"//\")+url.host) + trimUrl(url.pathname)));\r\n    solid(url, \"toString\", _=>url.base, false);\r\n    return url;\r\n}\r\n\r\nexport const decodeParam = param=>param && decodeURIComponent(param).replace(/(^[\"'`]+)|([\"'`]+$)/g, \"\");\r\n\r\nconst _knownBodyTypes = [\"json\", \"xml\"];\r\nexport const setResponderBody = (responder, body, defaultType=\"json\", extraType=\"\")=>{\r\n    let type = responder.getType();\r\n    if (!type || !_knownBodyTypes.includes(type)) { type = defaultType; }\r\n\r\n    responder.setHeader(\"Content-Type\", `application/${type}` + (extraType ? \";\"+extraType : \"\"));\r\n    const out = type === \"json\" ? JSON.stringify(body) : builder.create(body).end({ pretty: true });\r\n    return responder.setBody(200, out);\r\n}", "import { pathToRegexp } from 'path-to-regexp';\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nimport actions from \"../actions\";\r\nimport { decodeParam } from '../tools';\r\n\r\nconst { solid, cached, virtual } = jet.prop;\r\n\r\nexport class Route {\r\n    constructor(server, method, path, action) {\r\n\r\n        const keys = [];\r\n\r\n        cached(this, {}, \"regex\", _ => pathToRegexp(path, keys), false);\r\n        virtual(this, \"keys\", _ => { this.regex; return keys; }, false);\r\n\r\n        solid(this, \"server\", server, false);\r\n        solid.all(this, {\r\n            method,\r\n            path,\r\n            action\r\n        });\r\n\r\n        solid(this, \"resolve\", actions[action]);\r\n\r\n        if (!this.resolve) {\r\n            throw Error(this.msg(`action '${action}' is not one of: '${Object.keys(actions).join(\", \")}'`));\r\n        }\r\n\r\n    }\r\n\r\n    msg(text) {\r\n        return this.server.msg(`route '${this.path}' ${text}`);\r\n    }\r\n\r\n    test(pathname) {\r\n        return this.regex.test(pathname);\r\n    }\r\n\r\n    parseParams(pathname) {\r\n        const { action, regex, keys } = this;\r\n        const ex = regex.exec(pathname);\r\n\r\n        if (!ex) { throw Error(this.msg(`parseParams('${pathname}') failed`)); }\r\n        const params = {};\r\n\r\n        for (let i = 0; i < keys.length; i++) {\r\n            solid(params, keys[i].name, decodeParam(ex[i + 1]));\r\n        }\r\n        \r\n        solid(params, \"count\", action === \"count\");\r\n\r\n        return params;\r\n    }\r\n\r\n}", "export default async context => {\r\n    const { responder, model, gw:{ url } } = context;\r\n\r\n    const collections = [];\r\n  \r\n    for (const name in model.entitySets) {\r\n      if (!(await context.filter(name))) { continue; }\r\n      collections.push({\r\n        kind: \"EntitySet\",\r\n        name,\r\n        url: name,\r\n      });\r\n    }\r\n  \r\n    const out = {\r\n      \"@odata.context\": `${url}/$metadata`,\r\n      value: collections,\r\n    }\r\n\r\n    responder.setHeader(\"Content-Type\", \"application/json\");\r\n    return responder.setBody(200, JSON.stringify(out));\r\n\r\n}", "export default async context => {\r\n    const { responder } = context;\r\n    \r\n    return responder.setBody(204);\r\n};", "export default async context=> {\r\n  const { responder } = context;\r\n  \r\n  const count = Math.max(0, Number.jet.to(await context.fetchResponseBodyRaw()));\r\n  const { $select } = await context.fetchOptions();\r\n\r\n  const out = {\r\n    \"@odata.context\":context.getScopeMeta($select ? Object.keys($select) : \"\"),\r\n    \"@odata.count\":count,\r\n    value:count\r\n  };\r\n\r\n  responder.setHeader(\"Content-Type\", \"application/json;odata.metadata=minimal\");\r\n  return responder.setBody(200, JSON.stringify(out));\r\n\r\n}\r\n", "export default async context=> {\r\n  const { responder } = context;\r\n\r\n  const { primaryKey } = await context.fetchEntity();\r\n  const rawBody = await context.fetchResponseBodyRaw();\r\n  const id = rawBody[primaryKey];\r\n\r\n  const out = {};\r\n  out[\"@odata.context\"] = context.getScopeMetaEntity();\r\n  out[\"@odata.id\"] = out[\"@odata.editLink\"] = context.getScope(id, \"'\");\r\n\r\n  await context.pullResponseBody(out);\r\n\r\n  responder.setHeader(\"Content-Type\", \"application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=false;charset=utf-8\");\r\n  responder.setHeader(\"Location\", context.getScope(encodeURI(id), \"'\"));\r\n  return responder.setBody(201, JSON.stringify(out));\r\n  \r\n};\r\n\r\n\r\n", "import { setResponderBody, unwrap } from \"../../tools\";\r\nimport builder from 'xmlbuilder';\r\n\r\nconst mapProps = async (props, entity, filter)=>{\r\n  const r = [];\r\n  for (const name in props) {\r\n    const { key, type, nullable } = props[name];\r\n    if (!key && entity && !await filter(entity, name)) { continue; }\r\n    r.push({ \"@Name\": name, \"@Type\": type, \"@Nullable\":nullable });\r\n  }\r\n  return r;\r\n}\r\n\r\nexport default async context=> {\r\n\r\n  const { model, responder } = context;\r\n  const namespace = model.namespace;\r\n\r\n  const entityTypes = [];\r\n  const entitySets = [];\r\n  const complexTypes = [];\r\n\r\n  for (const name in model.entitySets) {\r\n    if (!await context.filter(name)) { continue; }\r\n\r\n    const { entityType, primaryKey, props } = model.entitySets[name];\r\n\r\n    entityTypes.push({\r\n      \"@Name\": unwrap(entityType, namespace+\".\"),\r\n      Property:await mapProps(props, name, context.filter),\r\n      Key:primaryKey ? { PropertyRef: { \"@Name\": primaryKey } } : undefined\r\n    });\r\n\r\n    entitySets.push({\r\n      \"@EntityType\": entityType,\r\n      \"@Name\": name\r\n    });\r\n\r\n  }\r\n\r\n  for (const name in model.complexTypes) {\r\n    const { props } = model.complexTypes[name];\r\n    complexTypes.push({ \"@Name\": name, Property:await mapProps(props)});\r\n  }\r\n\r\n  const out = {\r\n    \"edmx:Edmx\": {\r\n      \"@xmlns:edmx\": \"http://docs.oasis-open.org/odata/ns/edmx\",\r\n      \"@Version\": \"4.0\",\r\n      \"edmx:DataServices\": {\r\n        Schema: {\r\n          \"@xmlns\": \"http://docs.oasis-open.org/odata/ns/edm\",\r\n          \"@Namespace\": model.namespace,\r\n          EntityType: entityTypes,\r\n          EntityContainer: {\r\n            \"@Name\": \"Context\",\r\n            EntitySet: entitySets\r\n          },\r\n          ComplexType:complexTypes.length ? complexTypes : undefined\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return setResponderBody(responder, out, \"xml\");\r\n\r\n}", "export default async context=> {\r\n  const { responder, params} = context;\r\n  const { primaryKey } = await context.fetchEntity();\r\n  const { $select, $count } = await context.fetchOptions();\r\n\r\n  let out = {};\r\n\r\n  if (params.hasOwnProperty(\"id\")) {\r\n    out[\"@odata.context\"] = context.getScopeMetaEntity($select ? Object.keys($select) : \"\");\r\n    await context.pullResponseBody(out);\r\n    if (!out.hasOwnProperty(primaryKey)) { throw {code:404, msg:\"Not found\"}; }\r\n  } else {\r\n    out[\"@odata.context\"] = context.getScopeMeta($select ? Object.keys($select) : \"\");\r\n    const value = await context.pullResponseBody([]);\r\n    if ($count) { out[\"@odata.count\"] = value.length; }\r\n    out.value = value;\r\n  }\r\n\r\n  responder.setHeader(\"Content-Type\", \"application/json;odata.metadata=minimal\");\r\n  return responder.setBody(200, JSON.stringify(out));\r\n\r\n}\r\n", "export default async context=> {\r\n  const { responder } = context;\r\n\r\n  await context.fetchEntity();\r\n\r\n  const rawBody = await context.fetchResponseBodyRaw();\r\n  if (!rawBody) { throw {code:404, msg:\"Not found\"}; }\r\n\r\n  return responder.setBody(204);\r\n  \r\n};", "export default async context=> {\r\n  const { responder } = context;\r\n\r\n  await context.fetchEntity();\r\n\r\n  const rawBody = await context.fetchResponseBodyRaw();\r\n  if (!rawBody) { throw {code:404, msg:\"Not found\"}; }\r\n\r\n  return responder.setBody(204);\r\n  \r\n};", "\n        import * as module0 from './resolvers/collections.js';import * as module1 from './resolvers/cors.js';import * as module2 from './resolvers/count.js';import * as module3 from './resolvers/insert.js';import * as module4 from './resolvers/metadata.js';import * as module5 from './resolvers/query.js';import * as module6 from './resolvers/remove.js';import * as module7 from './resolvers/update.js'\n\n        const modules = [module0,module1,module2,module3,module4,module5,module6,module7];\n\n        export default modules;\n        export const filenames = ['./resolvers/collections.js','./resolvers/cors.js','./resolvers/count.js','./resolvers/insert.js','./resolvers/metadata.js','./resolvers/query.js','./resolvers/remove.js','./resolvers/update.js']\n      ", "import * as files from \"./resolvers/**\";\r\n\r\nconst _prefix = \"./resolvers/\";\r\nconst _suffix = \".js\";\r\n\r\nexport const methods = {};\r\nexport default methods;\r\n\r\nfiles.filenames.forEach((pathname, index)=>{\r\n    const name = pathname.substring(_prefix.length).slice(0, -_suffix.length);\r\n    methods[name] = files.default[index].default;\r\n});", "import jet from \"@randajan/jet-core\";\r\n\r\nimport { ModelProp } from \"./ModelProp\";\r\nimport { ModelEntity } from \"./ModelEntity\";\r\nimport { assignPack } from \"../parsers/types\";\r\n\r\nimport { propTypes } from \"../consts\";\r\nimport { isWrapped, unwrap } from \"../tools\";\r\n\r\nconst { solid } = jet.prop;\r\n\r\nconst createProp = (model, msg, name, attrs)=>new ModelProp(model, msg, name, attrs);\r\nconst createEntity = (model, msg, name, attrs)=>new ModelEntity(model, msg, name, attrs);\r\nconst createType = (model, msg, name, props)=>assignPack({}, model, msg, name, props, createProp);\r\n\r\nexport class Model {\r\n\r\n    constructor(server, model, converter) {\r\n        const { namespace, entityTypes, entitySets, complexTypes } = model;\r\n\r\n        solid(this, \"server\", server, false);\r\n        solid(this, \"namespace\", String.jet.to(namespace));\r\n\r\n        if (!this.namespace) { throw Error(this.msg(\"namespace missing\")); }\r\n\r\n        const _msg = this.msg.bind(this);\r\n        solid(this, \"complexTypes\", assignPack({}, this, _msg, \"complexTypes\", complexTypes, createType));\r\n        solid(this, \"entityTypes\", assignPack({}, this, _msg, \"entityTypes\", entityTypes, createType));\r\n        solid(this, \"entitySets\", assignPack({}, this, _msg, \"entitySets\", entitySets, createEntity));\r\n        solid(this, \"convert\", {}, false);\r\n\r\n        const csr = jet.isRunnable(converter);\r\n        if (!csr) { converter = Object.jet.to(converter); }\r\n\r\n        propTypes.map(t=>{\r\n            const fce = csr ? (v, method, context)=>converter(t, v, method, context) : jet.isRunnable(converter[t]) ? converter[t] : v=>v;\r\n            solid(this.convert, t, fce);\r\n        });\r\n        \r\n        \r\n    }\r\n\r\n    msg(text, ...path) {\r\n        path = path.join(\".\") || \"\";\r\n        if (path) { path = \".\"+path; }\r\n        return this.server.msg(\"model\" + path + \" \" + text);\r\n    }\r\n\r\n    checkNamespace(str) { return isWrapped(str, this.namespace+\".\"); }\r\n    stripNamespace(str) { return unwrap(str, this.namespace+\".\"); }\r\n\r\n    findEntity(name) {\r\n        const ent = this.entitySets[name];\r\n        if (!ent) { throw Error(this.msg(\"not found!\", \"entitySets\", name)); }\r\n        return ent;\r\n    }\r\n\r\n}", "import jet from \"@randajan/jet-core\";\r\n\r\nimport { propTypes } from \"../consts\";\r\nimport { unwrap } from \"../tools\";\r\n\r\nconst { solid } = jet.prop;\r\n\r\nconst convert = (prop, vals, method, context, subCollection)=> {\r\n    const { isCollection, complex, primitive, name, model } = prop;\r\n    if (name.startsWith(\"@odata\")) { return; }\r\n\r\n    if (!subCollection && isCollection) {\r\n        return (Array.isArray(vals) ? vals : [vals]).map(v=>convert(prop, v, method, context, true));\r\n    }\r\n\r\n    if (complex) { return complex[method](vals); }\r\n\r\n    return model.convert[primitive](vals, method, context);\r\n}\r\n\r\nexport class ModelProp {\r\n\r\n    constructor(model, msg, name, attrs) {\r\n\r\n        solid(this, \"model\", model, false);\r\n        solid(this, \"name\", name);\r\n\r\n        attrs = Object.jet.to(attrs);\r\n        for (const i in attrs) { solid(this, i, attrs[i]); }\r\n\r\n        if (!this.type) { throw Error(msg(`missing!`, name, \"type\")); }\r\n\r\n        const unCollection = unwrap(this.type, \"Collection(\", \")\");\r\n        solid(this, \"isCollection\", !!unCollection);\r\n\r\n        const complexName = unwrap(unCollection || this.type, model.namespace+\".\");\r\n        const complex = model.complexTypes[complexName];\r\n        if (complexName && !complex) { throw Error(msg(`definition missing at 'model.complexTypes.${complexName}'`, name, \"type\")); }\r\n\r\n        solid(this, \"primitive\", complex ? undefined : (unCollection || this.type));\r\n        solid(this, \"complex\", complex);\r\n\r\n        if (!complex && !propTypes.includes(this.primitive)) {\r\n            throw Error(msg(`invalid value '${this.type}' - accepts one of: '${propTypes.join(\", \")}'`, name, \"type\"));\r\n        }\r\n\r\n    }\r\n\r\n    convert(val, method, context) {\r\n        return convert(this, val, method, context);\r\n    }\r\n\r\n\r\n    toAdapter(val, context) {\r\n        return this.convert(val, \"toAdapter\", context);\r\n    }\r\n\r\n    toResponse(val, context) {\r\n        return this.convert(val, \"toResponse\", context);\r\n    }\r\n\r\n}", "\r\n\r\nexport const propTypes = [\r\n    'Edm.Int16',\r\n    'Edm.Int32',\r\n    'Edm.Int64',\r\n    'Edm.Boolean',\r\n    'Edm.String',\r\n    'Edm.Date',\r\n    'Edm.Single',\r\n    'Edm.Double',\r\n    'Edm.Decimal',\r\n    'Edm.TimeOfDay',\r\n    'Edm.DateTimeOffset',\r\n    'Edm.Byte',\r\n    'Edm.Binary',\r\n    'Edm.Duration'\r\n];\r\n\r\nexport const knownActions = [\r\n    \"query\",\r\n    \"count\",\r\n    \"insert\",\r\n    \"update\",\r\n    \"remove\"\r\n];\r\n\r\nexport const allowedQueryOptions = ['$', '$filter', '$expand', '$select', '$orderby', '$top', '$skip', '$count', '$format'];", "import jet from \"@randajan/jet-core\";\r\n\r\nimport { unwrap } from \"../tools\";\r\n\r\nconst { solid, cached } = jet.prop;\r\n\r\n\r\nexport class ModelEntity {\r\n\r\n    constructor(model, msg, name, attrs) {\r\n\r\n        solid(this, \"model\", model, false);\r\n        solid(this, \"name\", name);\r\n\r\n\r\n        attrs = Object.jet.to(attrs);\r\n        for (const i in attrs) { solid(this, i, attrs[i]); }\r\n\r\n        const entityType = this.entityType;\r\n\r\n        if (!entityType) { throw Error(msg(`missing!`, name, \"entityType\")); }\r\n\r\n        const typeName = unwrap(entityType, model.namespace + \".\");\r\n        if (!typeName) { throw Error(msg(`missing namespace '${model.namespace}' prefix`, name, \"entityType\")); }\r\n        const props = model.entityTypes[typeName];\r\n        if (!props) { throw Error(msg(`definition missing at 'model.entityTypes.${typeName}'`, name, \"entityType\")); }\r\n\r\n        solid(this, \"props\", props);\r\n        solid(this, \"propsList\", Object.keys(props));\r\n\r\n        for (const propName in props) {\r\n            if (!props[propName].key) { continue; }\r\n            if (this.primaryKey) { throw Error(msg(`primaryKey is allready defined as ${this.primaryKey}`, name, propName)); }\r\n            solid(this, \"primaryKey\", propName);\r\n        }\r\n\r\n        if (!this.primaryKey) { throw Error(msg(`primaryKey is missing`, name)); }\r\n\r\n    }\r\n\r\n    async forProps(callback) {\r\n        await Promise.all(this.propsList.map(i=>callback(this.props[i], i)));\r\n    }\r\n\r\n    async mapProps(callback, byKey = false) {\r\n        \r\n        const res = byKey ? {} : [];\r\n\r\n        await this.forProps(async (prop, i)=>{\r\n            const r = await callback(prop, i);\r\n            if (r === undefined ) { return; }\r\n            if (byKey) { res[i] = r; } else { res.push(r); }\r\n        });\r\n\r\n        return res;\r\n    }\r\n\r\n}", "import jet from \"@randajan/jet-core\";\r\n\r\nconst { cached } = jet.prop;\r\n\r\nconst validateChildDefault = (model, msg, name, child)=>child;\r\n\r\nexport const assignPack = (obj, model, msg, name, childs, validateChild)=>{\r\n    const _p = {};\r\n    const _msg = (text, ...path)=>msg(text, name, ...path);\r\n\r\n    validateChild = validateChild || validateChildDefault;\r\n    childs = Object.jet.to(childs);\r\n    for (let name in childs) {\r\n        const child = childs[name];\r\n        cached(obj, _p, name, _=>validateChild(model, _msg, name, child));\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\n//filter:props\r\nconst _pull = async (vals, method, context, to)=>{\r\n    const ent = await context.fetchEntity();\r\n    const tpv = typeof vals;\r\n    if (tpv !== \"function\" && tpv !== \"object\") { return to; }\r\n    if (typeof to !== \"object\") { to = {}; }\r\n\r\n    await ent.forProps(async (prop, i)=>{\r\n        if (!prop.key && !await context.filter(ent.name, i)) { return; }\r\n        const val = prop.convert(tpv === \"function\" ? await vals(i) : vals[i], method, context);\r\n        if (val !== undefined) { to[i] = val; }\r\n    });\r\n\r\n    return to;\r\n}\r\n\r\nexport const pullBody = async (vals, method, context, to)=>{\r\n    const toArray = Array.isArray(to);\r\n    vals = (toArray === Array.isArray(vals)) ? vals : toArray ? [vals] : vals[0];\r\n    if (!toArray) { return _pull(vals, method, context, to); }\r\n    await Promise.all(vals.map(async raw=>{\r\n        const val = await _pull(raw, method, context);\r\n        if (val) { to.push(val); }\r\n    }));\r\n    return to;\r\n}", "import jet from \"@randajan/jet-core\";\r\n\r\nimport { parseUrl } from \"../tools\";\r\nimport { Context } from \"./Context\";\r\n\r\nconst { solid } = jet.prop;\r\n\r\nexport class Gateway {\r\n\r\n    constructor(server, url, options={}, extendArgs=[]) {\r\n        const { adapter, filter, extender } = options;\r\n\r\n        solid.all(this, {\r\n            url:parseUrl(url, false),\r\n        });\r\n\r\n        solid.all(this, {\r\n            server,\r\n            fetchContext:async responder=>{\r\n                const context = new Context(this, await server.fetchModel(), responder, adapter, filter);\r\n                if (jet.isRunnable(extender)) { await extender(context, ...extendArgs); }\r\n                return context;\r\n            }\r\n        }, false);\r\n\r\n    }\r\n\r\n    msg(text) {\r\n        return this.server.msg(this.url.pathname + \" \" + text);\r\n    }\r\n\r\n    async resolve(responder) {\r\n        const { server } = this;\r\n        let context;\r\n\r\n        try {\r\n            responder.setHeader('OData-Version', '4.0');\r\n            responder.setHeader('DataServiceVersion', '4.0');\r\n            if (server.cors) { responder.setHeader('Access-Control-Allow-Origin', server.cors); }\r\n\r\n            context = await this.fetchContext(responder);\r\n            return await context.route.resolve(context);\r\n            \r\n        } catch (e) {\r\n\r\n            const error = {\r\n                code: e?.code || 500,\r\n                message: e?.msg || e?.message || \"Unknown error\",\r\n                stack: e?.stack,\r\n                method: responder.getMethod(),\r\n                target: responder.getURL(),\r\n                details: []\r\n            }\r\n\r\n            responder.setHeader('Content-Type', 'application/json');\r\n            responder.setBody(error.code, JSON.stringify({ error }));\r\n\r\n            server.onError(context, error);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}", "import jet from \"@randajan/jet-core\";\r\n\r\nimport { _fetchOptions } from \"../parsers/options\";\r\nimport { getScope, getScopeMeta, isWrapped, parseUrl, trimUrl, unwrap } from \"../tools\";\r\nimport { pullBody } from \"../parsers/types\";\r\n\r\nconst { solid, cached, safe } = jet.prop;\r\n\r\nexport class Context {\r\n    constructor(gw, model, responder, adapter, filter) {\r\n        const { server } = gw;\r\n\r\n        solid.all(this, {\r\n            server,\r\n            gw,\r\n            model\r\n        });\r\n\r\n        solid.all(this, {\r\n            responder,\r\n            filter:jet.isRunnable(filter) ? (entity, property)=>filter(this, entity, property) : _=>true\r\n        }, false);\r\n\r\n        cached.all(this, {}, {\r\n            url: _ =>{\r\n                const urlReq = responder.getURL();\r\n                const urlBase = trimUrl(gw.url.pathname);\r\n                if (!isWrapped(urlReq, urlBase)) { return {}; }\r\n                return parseUrl(unwrap(urlReq, urlBase), true);\r\n            },\r\n            method: _ => responder.getMethod().toLowerCase(),\r\n            route: _ => server.findRoute(this.method, this.url.pathname),\r\n            params: _ => this.route.parseParams(this.url.pathname)\r\n        });\r\n\r\n        cached.all(this, {}, {\r\n            _entity: async _ =>{\r\n                const { entity } = this.params;\r\n                if (await this.filter(entity)) { return this.model.findEntity(entity); }\r\n                throw { code:403, msg:`Forbidden` };\r\n            },\r\n            _options: async _ => _fetchOptions(this.url, this.params, (await this._entity).primaryKey),\r\n            _requestBodyRaw: async _=>responder.getBody(),\r\n            _responseBodyRaw: async _=>{\r\n                const { action } = this.route;\r\n                if (adapter[action]) { return adapter[action](this); }\r\n                throw { code:501, msg:`Action '${action}' is not implemented` };\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    getScope(ids, quote = \"\") {\r\n        const { gw:{url}, params:{entity} } = this;\r\n        return url + \"/\" + getScope(entity, ids, quote);\r\n    }\r\n\r\n    getScopeMeta(ids, quote = \"\") {\r\n        const { gw:{url}, params:{entity} } = this;\r\n        return url + \"/\" + getScopeMeta(entity, ids, quote);\r\n    }\r\n\r\n    getScopeMetaEntity(ids, quote = \"\") {\r\n        return this.getScopeMeta(ids, quote)+\"/$entity\";\r\n    }\r\n\r\n    async fetchEntity() {\r\n        return this._entity;\r\n    }\r\n\r\n    async fetchOptions() {\r\n        return this._options;\r\n    }\r\n\r\n    async fetchRequestBodyRaw() {\r\n        return this._requestBodyRaw;\r\n    }\r\n\r\n    async fetchResponseBodyRaw() {\r\n        return this._responseBodyRaw;\r\n    }\r\n\r\n    async pullRequestBody(to={}) {\r\n        return pullBody(await this.fetchRequestBodyRaw(), \"toAdapter\", this, to);\r\n    }\r\n\r\n    async pullResponseBody(to={}) {\r\n        return pullBody(await this.fetchResponseBodyRaw(), \"toResponse\", this, to);\r\n    }\r\n\r\n}", "import parser from 'odata-parser';\r\nimport querystring from 'querystring';\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nimport { unwrap } from \"../tools\";\r\nimport { allowedQueryOptions } from '../consts';\r\n\r\n\r\n// odata parser returns ['null', ''] for a filter with \"field eq null\"\r\n// we handle the case by fixing the query in case this happens\r\nconst filterBug = val=>(Array.isArray(val) && val.length === 2 && val[0] === 'null' && val[1] === '') ? null : val;\r\n\r\nconst parseOp = (op, left, right, func, args)=>{\r\n  const r = op || [];\r\n  r.push(parseNode(left, func, args));\r\n  r.push(parseNode(right, func, args));\r\n  return r;\r\n}\r\n\r\nconst parseSort = orderBy => {\r\n  const r = {};\r\n  if (!orderBy) { return r; }\r\n  for (const prop of orderBy) {\r\n    const propName = Object.keys(prop)[0];\r\n    r[propName] = prop[propName] === 'desc' ? -1 : 1;\r\n  }\r\n  return r;\r\n}\r\n\r\nconst parseSelect = select => {\r\n  const r = {};\r\n  if (!select) { return r; }\r\n  for (const prop of select) { r[prop] = 1; }\r\n  return r;\r\n}\r\n\r\nconst parseFilter = filter => {\r\n  if (!filter) { return {}; }\r\n  const { type, left, right, func, args } = filter;\r\n  return parseNode({ type, left, right }, func, args);\r\n}\r\n\r\n\r\nconst substringof = (args, result) => {\r\n\r\n  const prop = args[0].type === 'property' ? args[0] : args[1];\r\n  const lit = args[0].type === 'literal' ? args[0] : args[1];\r\n\r\n  result[prop.name] = new RegExp(lit.value);\r\n}\r\n\r\nconst _pushProp = (result, left, rightValue) => {\r\n  if (left.type !== 'property' || left.name.indexOf('/') === -1) { return result[left.name] = rightValue; }\r\n\r\n  const fragments = left.name.split('/');\r\n  const obj = result[fragments[0]] || {};\r\n\r\n  for (let i = 1; i < fragments.length; i++) {\r\n    if (i === (fragments.length - 1)) {\r\n      obj[fragments[i]] = rightValue\r\n    } else {\r\n      obj[fragments[i]] = obj[fragments[i]] || {}\r\n    }\r\n  }\r\n\r\n  return result[fragments[0]] = obj;\r\n}\r\n\r\nconst parseNode = ({ type, left, right }, func, args) => {\r\n  const result = {};\r\n  const pushProp = rightValue=>_pushProp(result, left, rightValue);\r\n\r\n  if (right.type === \"literal\") {\r\n    if (type === 'eq') { pushProp(filterBug(right.value)); }\r\n    if (type === 'lt') { pushProp({ $lt: right.value }); }\r\n    if (type === 'gt') { pushProp({ $gt: right.value }); }\r\n    if (type === 'le') { pushProp({ $lte: right.value }); }\r\n    if (type === 'ge') { pushProp({ $gte: right.value }); }\r\n    if (type === 'ne') { pushProp({ $ne:filterBug(right.value) }); }\r\n  }\r\n\r\n  if (type === 'and') { result.$and = parseOp(result.$and, left, right, func, args); }\r\n  if (type === 'or') { result.$or = parseOp(result.$or, left, right, func, args); }\r\n  if (type === 'functioncall') {\r\n    switch (func) {\r\n      case 'substringof': substringof(args, result)\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nconst parseQuery = (url) => {\r\n  let search = url.search;\r\n  if (!search) { return; }\r\n\r\n  let query = {};\r\n  for (let k in url.query) {\r\n    if (allowedQueryOptions.includes(k)) { query[k] = url.query[k]; }\r\n  }\r\n\r\n  //workaround v4 => v3\r\n  if (Boolean.jet.to(query.$count)) {\r\n    query[\"$inlinecount\"] = \"allpages\";\r\n\r\n    delete query.$count;\r\n    search = querystring.stringify(query);\r\n\r\n    if (!search) { return; }\r\n  }\r\n\r\n  search = decodeURIComponent((unwrap(search, \"?\") || search).replace(/\\+/g, \" \"));\r\n  \r\n  query = search ? parser.parse(search) : {};\r\n\r\n  if (query.$inlinecount != null) {\r\n    query.$count = true;\r\n    delete query.$inlinecount;\r\n  }\r\n\r\n  if (query.$top) { query.$limit = query.$top; }\r\n\r\n  query.$sort = parseSort(query.$orderby);\r\n  query.$filter = parseFilter(query.$filter);\r\n  query.$select = parseSelect(query.$select);\r\n\r\n  return query;\r\n}\r\n\r\n\r\n\r\nexport const _fetchOptions = (url, params, primaryKey) => {\r\n  const query = parseQuery(url) || { $filter: {} };\r\n\r\n  if (params.count) { query.$count = true; }\r\n  if (params.id) { query.$filter[primaryKey] = params.id; }\r\n\r\n  return query;\r\n}", "import { unwrap } from \"./tools\";\r\n\r\nconst _tsPattern = /^P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+S)?)?$/;\r\nconst _tsList = [\r\n    { unit: \"D\", factor: 86400000, group: \"\", patternIndex: 1 },\r\n    { unit: \"H\", factor: 3600000, group: \"T\", patternIndex: 3 },\r\n    { unit: \"M\", factor: 60000, group: \"T\", patternIndex: 4 },\r\n    { unit: \"S\", factor: 1000, group: \"T\", patternIndex: 5 }\r\n];\r\n\r\nexport const msToTimespan = (milliseconds, quoteLeft = \"duration'\", quoteRight = \"'\") => {\r\n    if (typeof milliseconds !== \"number\" || isNaN(milliseconds) || milliseconds < 0) { return; }\r\n    let rest = milliseconds;\r\n    let duration = \"P\";\r\n    let groupCurrent = \"\";\r\n\r\n    for (const { unit, factor, group } of _tsList) {\r\n        const value = Math.floor(rest / factor);\r\n        rest %= factor;\r\n        if (value <= 0) { continue; }\r\n        if (group !== groupCurrent) { duration += (groupCurrent = group); }\r\n        duration += `${value}${unit}`;\r\n    };\r\n\r\n    return quoteLeft + duration + quoteRight;\r\n};\r\n\r\nexport const timespanToMs = (timespan = \"\", quoteLeft = \"duration'\", quoteRight = \"'\") => {\r\n    const m = unwrap(timespan, quoteLeft, quoteRight).match(_tsPattern);\r\n    if (!m?.length) { return; }\r\n\r\n    let ms = 0;\r\n    for (const { factor, patternIndex } of _tsList) {\r\n        const value = parseInt(m[patternIndex], 10);\r\n        if (!isNaN(value)) { ms += value * factor; }\r\n    };\r\n    return ms;\r\n}\r\n\r\n\r\n// const durationExamples = [\r\n//   null,\r\n//   \"duration'P2DT4H30M'\",\r\n//   \"duration'PT10H15M'\",\r\n//   \"duration'PT45M'\",\r\n//   \"duration'P7DT2H'\",\r\n//   \"duration'PT1H30M20S'\",\r\n//   \"duration'P3D'\",\r\n//   \"duration'PT2M'\",\r\n//   \"duration'P1DT12H45M'\",\r\n//   \"duration'PT5S'\",\r\n//   \"duration'PT8H'\",\r\n//   \"duration'P4DT6H10M'\",\r\n//   \"duration'PT30M'\",\r\n//   \"duration'PT1S'\",\r\n//   \"duration'P2DT23H59M59S'\",\r\n//   \"duration'PT20M'\",\r\n//   \"duration'P1DT1H'\",\r\n//   \"duration'PT15S'\",\r\n//   \"duration'PT2H30M'\",\r\n//   \"duration'P5D'\",\r\n//   \"duration'PT10S'\"\r\n// ];\r\n\r\n// console.log(durationExamples.map(e=>[e, timespanToMs(e), msToTimespan(timespanToMs(e)), msToTimespan(timespanToMs(e)) === e]));", "import { Server } from \"./class/Server.js\";\r\nimport { msToTimespan, timespanToMs } from \"./converters.js\";\r\n\r\nexport default (options)=>new Server(options);\r\n\r\nexport {\r\n    Server,\r\n    timespanToMs,\r\n    msToTimespan\r\n}\r\n"],
  "mappings": "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",
  "names": ["jet", "urlParser", "builder", "jet", "solid", "vault", "withBrackets", "val", "quote", "str", "getScope", "entity", "ids", "getScopeMeta", "isWrapped", "prefix", "suffix", "unwrap", "trimUrl", "pathname", "parseUrl", "url", "parseQueryString", "_", "decodeParam", "param", "_knownBodyTypes", "setResponderBody", "responder", "body", "defaultType", "extraType", "type", "out", "pathToRegexp", "jet", "collections_exports", "__export", "collections_default", "collections_default", "context", "responder", "model", "url", "collections", "name", "out", "cors_exports", "__export", "cors_default", "cors_default", "context", "responder", "count_exports", "__export", "count_default", "count_default", "context", "responder", "count", "$select", "out", "insert_exports", "__export", "insert_default", "insert_default", "context", "responder", "primaryKey", "id", "out", "metadata_exports", "__export", "metadata_default", "mapProps", "props", "entity", "filter", "r", "name", "key", "type", "nullable", "metadata_default", "context", "model", "responder", "namespace", "entityTypes", "entitySets", "complexTypes", "entityType", "primaryKey", "unwrap", "out", "setResponderBody", "query_exports", "__export", "query_default", "query_default", "context", "responder", "params", "primaryKey", "$select", "$count", "out", "value", "remove_exports", "__export", "remove_default", "remove_default", "context", "responder", "update_exports", "__export", "update_default", "update_default", "context", "responder", "modules", "collections_exports", "cors_exports", "count_exports", "insert_exports", "metadata_exports", "query_exports", "remove_exports", "update_exports", "__default", "filenames", "_prefix", "_suffix", "methods", "actions_default", "filenames", "pathname", "index", "name", "__default", "solid", "cached", "virtual", "jet", "Route", "server", "method", "path", "action", "keys", "_", "pathToRegexp", "actions_default", "text", "pathname", "regex", "ex", "params", "i", "decodeParam", "jet", "jet", "propTypes", "allowedQueryOptions", "solid", "jet", "convert", "prop", "vals", "method", "context", "subCollection", "isCollection", "complex", "primitive", "name", "model", "v", "ModelProp", "msg", "attrs", "i", "unCollection", "unwrap", "complexName", "propTypes", "val", "jet", "solid", "cached", "jet", "ModelEntity", "model", "msg", "name", "attrs", "i", "entityType", "typeName", "unwrap", "props", "propName", "callback", "byKey", "res", "prop", "r", "jet", "cached", "validateChildDefault", "model", "msg", "name", "child", "assignPack", "obj", "childs", "validateChild", "_p", "_msg", "text", "path", "_", "_pull", "vals", "method", "context", "to", "ent", "tpv", "prop", "i", "val", "pullBody", "toArray", "raw", "solid", "jet", "createProp", "model", "msg", "name", "attrs", "ModelProp", "createEntity", "ModelEntity", "createType", "props", "assignPack", "Model", "server", "converter", "namespace", "entityTypes", "entitySets", "complexTypes", "_msg", "csr", "propTypes", "t", "fce", "v", "method", "context", "text", "path", "str", "isWrapped", "unwrap", "ent", "jet", "jet", "parser", "querystring", "filterBug", "val", "parseOp", "op", "left", "right", "func", "args", "r", "parseNode", "parseSort", "orderBy", "prop", "propName", "parseSelect", "select", "parseFilter", "filter", "type", "substringof", "result", "lit", "_pushProp", "rightValue", "fragments", "obj", "i", "pushProp", "parseQuery", "url", "search", "query", "k", "allowedQueryOptions", "querystring", "unwrap", "parser", "_fetchOptions", "params", "primaryKey", "solid", "cached", "safe", "jet", "Context", "gw", "model", "responder", "adapter", "filter", "server", "entity", "property", "_", "urlReq", "urlBase", "trimUrl", "isWrapped", "parseUrl", "unwrap", "_fetchOptions", "action", "ids", "quote", "url", "getScope", "getScopeMeta", "to", "pullBody", "solid", "jet", "Gateway", "server", "url", "options", "extendArgs", "adapter", "filter", "extender", "parseUrl", "responder", "context", "Context", "text", "e", "error", "solid", "cached", "jet", "Server", "options", "model", "cors", "converter", "onError", "_p", "vault", "_", "Model", "responder", "url", "extendArgs", "gw", "Gateway", "a", "text", "method", "path", "action", "routes", "list", "route", "Route", "_tsPattern", "_tsList", "msToTimespan", "milliseconds", "quoteLeft", "quoteRight", "rest", "duration", "groupCurrent", "unit", "factor", "group", "value", "timespanToMs", "timespan", "m", "unwrap", "ms", "patternIndex", "src_default", "options", "Server"]
}
