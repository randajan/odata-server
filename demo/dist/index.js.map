{
  "version": 3,
  "sources": ["<define:__slib_info>", "../../node_modules/@randajan/simple-lib/src/logger.js", "../../node_modules/@randajan/simple-lib/src/info/index.js", "../../node_modules/@randajan/simple-lib/src/node/index.js", "../../dist/chunk-OUWZ2PU5.js", "../../src/class/Server.js", "../../src/tools.js", "../../src/class/Route.js", "../../src/actions/resolvers/collections.js", "../../src/actions/resolvers/cors.js", "../../src/actions/resolvers/count.js", "../../src/actions/resolvers/insert.js", "../../src/actions/resolvers/metadata.js", "../../src/actions/resolvers/query.js", "../../src/actions/resolvers/remove.js", "../../src/actions/resolvers/update.js", "../../dist/import-glob:./resolvers/**", "../../src/actions/index.js", "../../src/class/Model.js", "../../src/class/ModelProp.js", "../../src/consts.js", "../../src/class/ModelEntity.js", "../../src/parsers/types.js", "../../src/class/Gateway.js", "../../src/class/Context.js", "../../src/parsers/options.js", "../../src/converters.js", "../../src/index.js", "../../src/mods/adapter/Mongo.js", "../../src/mods/responder/Express.js", "../src/index.js"],
  "sourcesContent": ["", "import chalkNative from \"chalk\";\r\n\r\nconst chalkProps = Object.getOwnPropertyNames(Object.getPrototypeOf(chalkNative)).filter(v=>v!==\"constructor\");\r\n\r\nclass Logger extends Function {\r\n    constructor(formater, chalkInit) {\r\n        super();\r\n        const chalk = chalkInit||chalkNative;\r\n\r\n        const log = (...msgs)=>{ console.log(chalk(formater(msgs))); }\r\n        const self = Object.setPrototypeOf(log.bind(), new.target.prototype);\r\n\r\n        for (const prop of chalkProps) {\r\n            Object.defineProperty(self, prop, { get: _=>new Logger(formater, chalk[prop]), enumerable:false });\r\n        }\r\n        \r\n        return self;\r\n    }\r\n}\r\n\r\nexport const logger = (...prefixes)=>{\r\n    const now = _=>(new Date()).toLocaleTimeString(\"cs-CZ\");\r\n    prefixes = prefixes.filter(v=>!!v).join(\" \");\r\n\r\n    return new Logger(msgs=>`${prefixes} | ${now()} | ${msgs.join(\" \")}`);\r\n}", "const enumerable = true;\r\nconst lockObject = o=>{\r\n    if (typeof o !== \"object\") { return o; }\r\n\r\n    const r = {};\r\n    for (const i in o) {\r\n        const descriptor = { enumerable };\r\n        let val = o[i];\r\n        if (val instanceof Array) { descriptor.get = _=>[...val]; }\r\n        else { descriptor.value = lockObject(val); }\r\n        Object.defineProperty(r, i, descriptor);\r\n    }\r\n\r\n    return r;\r\n}\r\n\r\nexport const info = lockObject(__slib_info);\r\nexport default info;", "import { parentPort } from \"worker_threads\";\r\nimport { info } from \"../info\";\r\nimport { logger } from \"../logger\";\r\n\r\nexport default info;\r\n\r\nexport const log = logger(info.name, info.version, info.env);\r\n\r\nexport {\r\n    info,\r\n}\r\n\r\nparentPort.on(\"message\", msg=>{\r\n    if (msg===\"shutdown\") { process.exit(0); }\r\n});\r\n\r\nprocess.on('uncaughtException', e=>{\r\n  console.log(e.stack);\r\n});", "var d=Object.defineProperty;var e=(c,a)=>{for(var b in a)d(c,b,{get:a[b],enumerable:!0})};export{e as a};\n//# sourceMappingURL=chunk-OUWZ2PU5.js.map\n", "\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nimport { parseUrl, trimUrl, unwrap, vault } from \"../tools\";\r\n\r\nimport { Route } from \"./Route\";\r\n\r\nimport { Model } from \"./Model\";\r\nimport { Gateway } from \"./Gateway\";\r\n\r\nconst { solid, cached } = jet.prop;\r\n\r\nexport class Server {\r\n  constructor(options={}) {\r\n\r\n    const { model, cors, converter, onError } = options;\r\n\r\n    const _p = {\r\n      routes:{},\r\n    }\r\n\r\n    vault.set(this, _p);\r\n\r\n    solid(this, \"cors\", String.jet.to(cors));\r\n\r\n    cached.all(this, _p, {\r\n      _model:async _=>new Model(this, await (jet.isRunnable(model) ? model() : model), converter)\r\n    }, false);\r\n\r\n    solid.all(this, {\r\n      serve:(responder, url, ...extendArgs)=>{\r\n        const gw = new Gateway(this, url, options, extendArgs);\r\n        return (...a)=>gw.resolve(responder(...a));\r\n      },\r\n      onError:jet.isRunnable(onError) ? onError : ()=>{}\r\n    }, false);\r\n\r\n    this.addRoute(\"get\", '/', \"collections\");\r\n    this.addRoute(\"get\", '/\\$metadata', \"metadata\");\r\n\r\n    this.addRoute(\"get\", '/:entity/\\$count', \"count\");\r\n    this.addRoute(\"get\", '/:entity\\\\(:id\\\\)', \"query\");\r\n    this.addRoute(\"get\", '/:entity', \"query\");\r\n\r\n    this.addRoute(\"delete\", '/:entity\\\\(:id\\\\)', \"remove\");\r\n    this.addRoute(\"patch\", '/:entity\\\\(:id\\\\)', \"update\");\r\n    this.addRoute(\"post\", '/:entity', \"insert\");\r\n\r\n    if (this.cors) { this.addRoute(\"options\", '/(.*)', \"cors\"); }\r\n\r\n  }\r\n\r\n  msg(text) {\r\n    return \"OData server \" + text;\r\n  }\r\n\r\n  addRoute(method, path, action) {\r\n    const { routes } = vault.get(this);\r\n    const list = routes[method] || (routes[method] = []);\r\n    const route = new Route(this, method, path, action);\r\n    list.push(route);\r\n    return route;\r\n  }\r\n\r\n  findRoute(method, path) {\r\n    const _p = vault.get(this);\r\n    const routes = _p.routes[method] || [];\r\n\r\n    for (const route of routes) {\r\n      if (route.test(path)) { return route; }\r\n    }\r\n\r\n    throw { code: 404, msg: \"Not found\" };\r\n  }\r\n\r\n  async fetchModel() {\r\n    return this._model;\r\n  }\r\n\r\n}\r\n", "\r\nimport { parse as urlParser } from \"url\";\r\nimport builder from 'xmlbuilder';\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nconst { solid } = jet.prop;\r\n\r\nexport const vault = new WeakMap();\r\n\r\n\r\nexport const withBrackets = (val, quote=\"\")=>{\r\n    const str = String.jet.to(val, quote+\",\"+quote);\r\n    return str ? \"(\"+quote+str+quote+\")\" : \"\";\r\n}\r\n\r\nexport const getScope = (entity, ids, quote=\"\")=>entity + withBrackets(ids, quote);\r\nexport const getScopeMeta = (entity, ids, quote=\"\")=>\"$metadata#\"+getScope(entity, ids, quote);\r\n\r\n\r\nexport const isWrapped = (str, prefix=\"\", suffix=\"\")=>typeof str === \"string\" ? str.startsWith(prefix) && str.endsWith(suffix) : false;\r\nexport const unwrap = (str, prefix=\"\", suffix=\"\")=>isWrapped(str = String.jet.to(str), prefix, suffix) ? str.slice(prefix.length, str.length - suffix.length) : \"\";\r\n\r\nexport const trimUrl = pathname=>pathname.endsWith(\"/\") ? pathname.slice(0, pathname.length-1) : pathname;\r\n\r\nexport const parseUrl = (url, parseQueryString=false)=>{\r\n    url = urlParser(String.jet.to(url) || \"/\", parseQueryString);\r\n    solid(url, \"base\", ((!url.host ? \"\" : (!url.protocol ? \"\" : url.protocol+\"//\")+url.host) + trimUrl(url.pathname)));\r\n    solid(url, \"toString\", _=>url.base, false);\r\n    return url;\r\n}\r\n\r\nexport const decodeParam = param=>param && decodeURIComponent(param).replace(/(^[\"'`]+)|([\"'`]+$)/g, \"\");\r\n\r\nconst _knownBodyTypes = [\"json\", \"xml\"];\r\nexport const setResponderBody = (responder, body, defaultType=\"json\", extraType=\"\")=>{\r\n    let type = responder.getType();\r\n    if (!type || !_knownBodyTypes.includes(type)) { type = defaultType; }\r\n\r\n    responder.setHeader(\"Content-Type\", `application/${type}` + (extraType ? \";\"+extraType : \"\"));\r\n    const out = type === \"json\" ? JSON.stringify(body) : builder.create(body).end({ pretty: true });\r\n    return responder.setBody(200, out);\r\n}", "import { pathToRegexp } from 'path-to-regexp';\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nimport actions from \"../actions\";\r\nimport { decodeParam } from '../tools';\r\n\r\nconst { solid, cached, virtual } = jet.prop;\r\n\r\nexport class Route {\r\n    constructor(server, method, path, action) {\r\n\r\n        const keys = [];\r\n\r\n        cached(this, {}, \"regex\", _ => pathToRegexp(path, keys), false);\r\n        virtual(this, \"keys\", _ => { this.regex; return keys; }, false);\r\n\r\n        solid(this, \"server\", server, false);\r\n        solid.all(this, {\r\n            method,\r\n            path,\r\n            action\r\n        });\r\n\r\n        solid(this, \"resolve\", actions[action]);\r\n\r\n        if (!this.resolve) {\r\n            throw Error(this.msg(`action '${action}' is not one of: '${Object.keys(actions).join(\", \")}'`));\r\n        }\r\n\r\n    }\r\n\r\n    msg(text) {\r\n        return this.server.msg(`route '${this.path}' ${text}`);\r\n    }\r\n\r\n    test(pathname) {\r\n        return this.regex.test(pathname);\r\n    }\r\n\r\n    parseParams(pathname) {\r\n        const { action, regex, keys } = this;\r\n        const ex = regex.exec(pathname);\r\n\r\n        if (!ex) { throw Error(this.msg(`parseParams('${pathname}') failed`)); }\r\n        const params = {};\r\n\r\n        for (let i = 0; i < keys.length; i++) {\r\n            solid(params, keys[i].name, decodeParam(ex[i + 1]));\r\n        }\r\n        \r\n        solid(params, \"count\", action === \"count\");\r\n\r\n        return params;\r\n    }\r\n\r\n}", "export default async context => {\r\n    const { responder, model, gw:{ url } } = context;\r\n\r\n    const collections = [];\r\n  \r\n    for (const name in model.entitySets) {\r\n      if (!(await context.filter(name))) { continue; }\r\n      collections.push({\r\n        kind: \"EntitySet\",\r\n        name,\r\n        url: name,\r\n      });\r\n    }\r\n  \r\n    const out = {\r\n      \"@odata.context\": `${url}/$metadata`,\r\n      value: collections,\r\n    }\r\n\r\n    responder.setHeader(\"Content-Type\", \"application/json\");\r\n    return responder.setBody(200, JSON.stringify(out));\r\n\r\n}", "export default async context => {\r\n    const { responder } = context;\r\n    \r\n    return responder.setBody(204);\r\n};", "export default async context=> {\r\n  const { responder } = context;\r\n  \r\n  const count = Math.max(0, Number.jet.to(await context.fetchResponseBodyRaw()));\r\n  const { $select } = await context.fetchOptions();\r\n\r\n  const out = {\r\n    \"@odata.context\":context.getScopeMeta($select ? Object.keys($select) : \"\"),\r\n    \"@odata.count\":count,\r\n    value:count\r\n  };\r\n\r\n  responder.setHeader(\"Content-Type\", \"application/json;odata.metadata=minimal\");\r\n  return responder.setBody(200, JSON.stringify(out));\r\n\r\n}\r\n", "export default async context=> {\r\n  const { responder } = context;\r\n\r\n  const { primaryKey } = await context.fetchEntity();\r\n  const rawBody = await context.fetchResponseBodyRaw();\r\n  const id = rawBody[primaryKey];\r\n\r\n  const out = {};\r\n  out[\"@odata.context\"] = context.getScopeMetaEntity();\r\n  out[\"@odata.id\"] = out[\"@odata.editLink\"] = context.getScope(id, \"'\");\r\n\r\n  await context.pullResponseBody(out);\r\n\r\n  responder.setHeader(\"Content-Type\", \"application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=false;charset=utf-8\");\r\n  responder.setHeader(\"Location\", context.getScope(encodeURI(id), \"'\"));\r\n  return responder.setBody(201, JSON.stringify(out));\r\n  \r\n};\r\n\r\n\r\n", "import { setResponderBody, unwrap } from \"../../tools\";\r\nimport builder from 'xmlbuilder';\r\n\r\nconst mapProps = async (props, entity, filter)=>{\r\n  const r = [];\r\n  for (const name in props) {\r\n    const { key, type, nullable } = props[name];\r\n    if (!key && entity && !await filter(entity, name)) { continue; }\r\n    r.push({ \"@Name\": name, \"@Type\": type, \"@Nullable\":nullable });\r\n  }\r\n  return r;\r\n}\r\n\r\nexport default async context=> {\r\n\r\n  const { model, responder } = context;\r\n  const namespace = model.namespace;\r\n\r\n  const entityTypes = [];\r\n  const entitySets = [];\r\n  const complexTypes = [];\r\n\r\n  for (const name in model.entitySets) {\r\n    if (!await context.filter(name)) { continue; }\r\n\r\n    const { entityType, primaryKey, props } = model.entitySets[name];\r\n\r\n    entityTypes.push({\r\n      \"@Name\": unwrap(entityType, namespace+\".\"),\r\n      Property:await mapProps(props, name, context.filter),\r\n      Key:primaryKey ? { PropertyRef: { \"@Name\": primaryKey } } : undefined\r\n    });\r\n\r\n    entitySets.push({\r\n      \"@EntityType\": entityType,\r\n      \"@Name\": name\r\n    });\r\n\r\n  }\r\n\r\n  for (const name in model.complexTypes) {\r\n    const { props } = model.complexTypes[name];\r\n    complexTypes.push({ \"@Name\": name, Property:await mapProps(props)});\r\n  }\r\n\r\n  const out = {\r\n    \"edmx:Edmx\": {\r\n      \"@xmlns:edmx\": \"http://docs.oasis-open.org/odata/ns/edmx\",\r\n      \"@Version\": \"4.0\",\r\n      \"edmx:DataServices\": {\r\n        Schema: {\r\n          \"@xmlns\": \"http://docs.oasis-open.org/odata/ns/edm\",\r\n          \"@Namespace\": model.namespace,\r\n          EntityType: entityTypes,\r\n          EntityContainer: {\r\n            \"@Name\": \"Context\",\r\n            EntitySet: entitySets\r\n          },\r\n          ComplexType:complexTypes.length ? complexTypes : undefined\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return setResponderBody(responder, out, \"xml\");\r\n\r\n}", "export default async context=> {\r\n  const { responder, params} = context;\r\n  const { primaryKey } = await context.fetchEntity();\r\n  const { $select, $count } = await context.fetchOptions();\r\n\r\n  let out = {};\r\n\r\n  if (params.hasOwnProperty(\"id\")) {\r\n    out[\"@odata.context\"] = context.getScopeMetaEntity($select ? Object.keys($select) : \"\");\r\n    await context.pullResponseBody(out);\r\n    if (!out.hasOwnProperty(primaryKey)) { throw {code:404, msg:\"Not found\"}; }\r\n  } else {\r\n    out[\"@odata.context\"] = context.getScopeMeta($select ? Object.keys($select) : \"\");\r\n    const value = await context.pullResponseBody([]);\r\n    if ($count) { out[\"@odata.count\"] = value.length; }\r\n    out.value = value;\r\n  }\r\n\r\n  responder.setHeader(\"Content-Type\", \"application/json;odata.metadata=minimal\");\r\n  return responder.setBody(200, JSON.stringify(out));\r\n\r\n}\r\n", "export default async context=> {\r\n  const { responder } = context;\r\n\r\n  await context.fetchEntity();\r\n\r\n  const rawBody = await context.fetchResponseBodyRaw();\r\n  if (!rawBody) { throw {code:404, msg:\"Not found\"}; }\r\n\r\n  return responder.setBody(204);\r\n  \r\n};", "export default async context=> {\r\n  const { responder } = context;\r\n\r\n  await context.fetchEntity();\r\n\r\n  const rawBody = await context.fetchResponseBodyRaw();\r\n  if (!rawBody) { throw {code:404, msg:\"Not found\"}; }\r\n\r\n  return responder.setBody(204);\r\n  \r\n};", "\n        import * as module0 from './resolvers/collections.js';import * as module1 from './resolvers/cors.js';import * as module2 from './resolvers/count.js';import * as module3 from './resolvers/insert.js';import * as module4 from './resolvers/metadata.js';import * as module5 from './resolvers/query.js';import * as module6 from './resolvers/remove.js';import * as module7 from './resolvers/update.js'\n\n        const modules = [module0,module1,module2,module3,module4,module5,module6,module7];\n\n        export default modules;\n        export const filenames = ['./resolvers/collections.js','./resolvers/cors.js','./resolvers/count.js','./resolvers/insert.js','./resolvers/metadata.js','./resolvers/query.js','./resolvers/remove.js','./resolvers/update.js']\n      ", "import * as files from \"./resolvers/**\";\r\n\r\nconst _prefix = \"./resolvers/\";\r\nconst _suffix = \".js\";\r\n\r\nexport const methods = {};\r\nexport default methods;\r\n\r\nfiles.filenames.forEach((pathname, index)=>{\r\n    const name = pathname.substring(_prefix.length).slice(0, -_suffix.length);\r\n    methods[name] = files.default[index].default;\r\n});", "import jet from \"@randajan/jet-core\";\r\n\r\nimport { ModelProp } from \"./ModelProp\";\r\nimport { ModelEntity } from \"./ModelEntity\";\r\nimport { assignPack } from \"../parsers/types\";\r\n\r\nimport { propTypes } from \"../consts\";\r\nimport { isWrapped, unwrap } from \"../tools\";\r\n\r\nconst { solid } = jet.prop;\r\n\r\nconst createProp = (model, msg, name, attrs)=>new ModelProp(model, msg, name, attrs);\r\nconst createEntity = (model, msg, name, attrs)=>new ModelEntity(model, msg, name, attrs);\r\nconst createType = (model, msg, name, props)=>assignPack({}, model, msg, name, props, createProp);\r\n\r\nexport class Model {\r\n\r\n    constructor(server, model, converter) {\r\n        const { namespace, entityTypes, entitySets, complexTypes } = model;\r\n\r\n        solid(this, \"server\", server, false);\r\n        solid(this, \"namespace\", String.jet.to(namespace));\r\n\r\n        if (!this.namespace) { throw Error(this.msg(\"namespace missing\")); }\r\n\r\n        const _msg = this.msg.bind(this);\r\n        solid(this, \"complexTypes\", assignPack({}, this, _msg, \"complexTypes\", complexTypes, createType));\r\n        solid(this, \"entityTypes\", assignPack({}, this, _msg, \"entityTypes\", entityTypes, createType));\r\n        solid(this, \"entitySets\", assignPack({}, this, _msg, \"entitySets\", entitySets, createEntity));\r\n        solid(this, \"convert\", {}, false);\r\n\r\n        const csr = jet.isRunnable(converter);\r\n        if (!csr) { converter = Object.jet.to(converter); }\r\n\r\n        propTypes.map(t=>{\r\n            const fce = csr ? (v, method, context)=>converter(t, v, method, context) : jet.isRunnable(converter[t]) ? converter[t] : v=>v;\r\n            solid(this.convert, t, fce);\r\n        });\r\n        \r\n        \r\n    }\r\n\r\n    msg(text, ...path) {\r\n        path = path.join(\".\") || \"\";\r\n        if (path) { path = \".\"+path; }\r\n        return this.server.msg(\"model\" + path + \" \" + text);\r\n    }\r\n\r\n    checkNamespace(str) { return isWrapped(str, this.namespace+\".\"); }\r\n    stripNamespace(str) { return unwrap(str, this.namespace+\".\"); }\r\n\r\n    findEntity(name) {\r\n        const ent = this.entitySets[name];\r\n        if (!ent) { throw Error(this.msg(\"not found!\", \"entitySets\", name)); }\r\n        return ent;\r\n    }\r\n\r\n}", "import jet from \"@randajan/jet-core\";\r\n\r\nimport { propTypes } from \"../consts\";\r\nimport { unwrap } from \"../tools\";\r\n\r\nconst { solid } = jet.prop;\r\n\r\nconst convert = (prop, vals, method, context, subCollection)=> {\r\n    const { isCollection, complex, primitive, name, model } = prop;\r\n    if (name.startsWith(\"@odata\")) { return; }\r\n\r\n    if (!subCollection && isCollection) {\r\n        return (Array.isArray(vals) ? vals : [vals]).map(v=>convert(prop, v, method, context, true));\r\n    }\r\n\r\n    if (complex) { return complex[method](vals); }\r\n\r\n    return model.convert[primitive](vals, method, context);\r\n}\r\n\r\nexport class ModelProp {\r\n\r\n    constructor(model, msg, name, attrs) {\r\n\r\n        solid(this, \"model\", model, false);\r\n        solid(this, \"name\", name);\r\n\r\n        attrs = Object.jet.to(attrs);\r\n        for (const i in attrs) { solid(this, i, attrs[i]); }\r\n\r\n        if (!this.type) { throw Error(msg(`missing!`, name, \"type\")); }\r\n\r\n        const unCollection = unwrap(this.type, \"Collection(\", \")\");\r\n        solid(this, \"isCollection\", !!unCollection);\r\n\r\n        const complexName = unwrap(unCollection || this.type, model.namespace+\".\");\r\n        const complex = model.complexTypes[complexName];\r\n        if (complexName && !complex) { throw Error(msg(`definition missing at 'model.complexTypes.${complexName}'`, name, \"type\")); }\r\n\r\n        solid(this, \"primitive\", complex ? undefined : (unCollection || this.type));\r\n        solid(this, \"complex\", complex);\r\n\r\n        if (!complex && !propTypes.includes(this.primitive)) {\r\n            throw Error(msg(`invalid value '${this.type}' - accepts one of: '${propTypes.join(\", \")}'`, name, \"type\"));\r\n        }\r\n\r\n    }\r\n\r\n    convert(val, method, context) {\r\n        return convert(this, val, method, context);\r\n    }\r\n\r\n\r\n    toAdapter(val, context) {\r\n        return this.convert(val, \"toAdapter\", context);\r\n    }\r\n\r\n    toResponse(val, context) {\r\n        return this.convert(val, \"toResponse\", context);\r\n    }\r\n\r\n}", "\r\n\r\nexport const propTypes = [\r\n    'Edm.Int16',\r\n    'Edm.Int32',\r\n    'Edm.Int64',\r\n    'Edm.Boolean',\r\n    'Edm.String',\r\n    'Edm.Date',\r\n    'Edm.Single',\r\n    'Edm.Double',\r\n    'Edm.Decimal',\r\n    'Edm.TimeOfDay',\r\n    'Edm.DateTimeOffset',\r\n    'Edm.Byte',\r\n    'Edm.Binary',\r\n    'Edm.Duration'\r\n];\r\n\r\nexport const knownActions = [\r\n    \"query\",\r\n    \"count\",\r\n    \"insert\",\r\n    \"update\",\r\n    \"remove\"\r\n];\r\n\r\nexport const allowedQueryOptions = ['$', '$filter', '$expand', '$select', '$orderby', '$top', '$skip', '$count', '$format'];", "import jet from \"@randajan/jet-core\";\r\n\r\nimport { unwrap } from \"../tools\";\r\n\r\nconst { solid, cached } = jet.prop;\r\n\r\n\r\nexport class ModelEntity {\r\n\r\n    constructor(model, msg, name, attrs) {\r\n\r\n        solid(this, \"model\", model, false);\r\n        solid(this, \"name\", name);\r\n\r\n\r\n        attrs = Object.jet.to(attrs);\r\n        for (const i in attrs) { solid(this, i, attrs[i]); }\r\n\r\n        const entityType = this.entityType;\r\n\r\n        if (!entityType) { throw Error(msg(`missing!`, name, \"entityType\")); }\r\n\r\n        const typeName = unwrap(entityType, model.namespace + \".\");\r\n        if (!typeName) { throw Error(msg(`missing namespace '${model.namespace}' prefix`, name, \"entityType\")); }\r\n        const props = model.entityTypes[typeName];\r\n        if (!props) { throw Error(msg(`definition missing at 'model.entityTypes.${typeName}'`, name, \"entityType\")); }\r\n\r\n        solid(this, \"props\", props);\r\n        solid(this, \"propsList\", Object.keys(props));\r\n\r\n        for (const propName in props) {\r\n            if (!props[propName].key) { continue; }\r\n            if (this.primaryKey) { throw Error(msg(`primaryKey is allready defined as ${this.primaryKey}`, name, propName)); }\r\n            solid(this, \"primaryKey\", propName);\r\n        }\r\n\r\n        if (!this.primaryKey) { throw Error(msg(`primaryKey is missing`, name)); }\r\n\r\n    }\r\n\r\n    async forProps(callback) {\r\n        await Promise.all(this.propsList.map(i=>callback(this.props[i], i)));\r\n    }\r\n\r\n    async mapProps(callback, byKey = false) {\r\n        \r\n        const res = byKey ? {} : [];\r\n\r\n        await this.forProps(async (prop, i)=>{\r\n            const r = await callback(prop, i);\r\n            if (r === undefined ) { return; }\r\n            if (byKey) { res[i] = r; } else { res.push(r); }\r\n        });\r\n\r\n        return res;\r\n    }\r\n\r\n}", "import jet from \"@randajan/jet-core\";\r\n\r\nconst { cached } = jet.prop;\r\n\r\nconst validateChildDefault = (model, msg, name, child)=>child;\r\n\r\nexport const assignPack = (obj, model, msg, name, childs, validateChild)=>{\r\n    const _p = {};\r\n    const _msg = (text, ...path)=>msg(text, name, ...path);\r\n\r\n    validateChild = validateChild || validateChildDefault;\r\n    childs = Object.jet.to(childs);\r\n    for (let name in childs) {\r\n        const child = childs[name];\r\n        cached(obj, _p, name, _=>validateChild(model, _msg, name, child));\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\n//filter:props\r\nconst _pull = async (vals, method, context, to)=>{\r\n    const ent = await context.fetchEntity();\r\n    const tpv = typeof vals;\r\n    if (tpv !== \"function\" && tpv !== \"object\") { return to; }\r\n    if (typeof to !== \"object\") { to = {}; }\r\n\r\n    await ent.forProps(async (prop, i)=>{\r\n        if (!prop.key && !await context.filter(ent.name, i)) { return; }\r\n        const val = prop.convert(tpv === \"function\" ? await vals(i) : vals[i], method, context);\r\n        if (val !== undefined) { to[i] = val; }\r\n    });\r\n\r\n    return to;\r\n}\r\n\r\nexport const pullBody = async (vals, method, context, to)=>{\r\n    const toArray = Array.isArray(to);\r\n    vals = (toArray === Array.isArray(vals)) ? vals : toArray ? [vals] : vals[0];\r\n    if (!toArray) { return _pull(vals, method, context, to); }\r\n    await Promise.all(vals.map(async raw=>{\r\n        const val = await _pull(raw, method, context);\r\n        if (val) { to.push(val); }\r\n    }));\r\n    return to;\r\n}", "import jet from \"@randajan/jet-core\";\r\n\r\nimport { parseUrl } from \"../tools\";\r\nimport { Context } from \"./Context\";\r\n\r\nconst { solid } = jet.prop;\r\n\r\nexport class Gateway {\r\n\r\n    constructor(server, url, options={}, extendArgs=[]) {\r\n        const { adapter, filter, extender } = options;\r\n\r\n        solid.all(this, {\r\n            url:parseUrl(url, false),\r\n        });\r\n\r\n        solid.all(this, {\r\n            server,\r\n            fetchContext:async responder=>{\r\n                const context = new Context(this, await server.fetchModel(), responder, adapter, filter);\r\n                if (jet.isRunnable(extender)) { await extender(context, ...extendArgs); }\r\n                return context;\r\n            }\r\n        }, false);\r\n\r\n    }\r\n\r\n    msg(text) {\r\n        return this.server.msg(this.url.pathname + \" \" + text);\r\n    }\r\n\r\n    async resolve(responder) {\r\n        const { server } = this;\r\n        let context;\r\n\r\n        try {\r\n            responder.setHeader('OData-Version', '4.0');\r\n            responder.setHeader('DataServiceVersion', '4.0');\r\n            if (server.cors) { responder.setHeader('Access-Control-Allow-Origin', server.cors); }\r\n\r\n            context = await this.fetchContext(responder);\r\n            return await context.route.resolve(context);\r\n            \r\n        } catch (e) {\r\n\r\n            const error = {\r\n                code: e?.code || 500,\r\n                message: e?.msg || e?.message || \"Unknown error\",\r\n                stack: e?.stack,\r\n                method: responder.getMethod(),\r\n                target: responder.getURL(),\r\n                details: []\r\n            }\r\n\r\n            responder.setHeader('Content-Type', 'application/json');\r\n            responder.setBody(error.code, JSON.stringify({ error }));\r\n\r\n            server.onError(context, error);\r\n\r\n        }\r\n\r\n    }\r\n\r\n}", "import jet from \"@randajan/jet-core\";\r\n\r\nimport { _fetchOptions } from \"../parsers/options\";\r\nimport { getScope, getScopeMeta, isWrapped, parseUrl, trimUrl, unwrap } from \"../tools\";\r\nimport { pullBody } from \"../parsers/types\";\r\n\r\nconst { solid, cached, safe } = jet.prop;\r\n\r\nexport class Context {\r\n    constructor(gw, model, responder, adapter, filter) {\r\n        const { server } = gw;\r\n\r\n        solid.all(this, {\r\n            server,\r\n            gw,\r\n            model\r\n        });\r\n\r\n        solid.all(this, {\r\n            responder,\r\n            filter:jet.isRunnable(filter) ? (entity, property)=>filter(this, entity, property) : _=>true\r\n        }, false);\r\n\r\n        cached.all(this, {}, {\r\n            url: _ =>{\r\n                const urlReq = responder.getURL();\r\n                const urlBase = trimUrl(gw.url.pathname);\r\n                if (!isWrapped(urlReq, urlBase)) { return {}; }\r\n                return parseUrl(unwrap(urlReq, urlBase), true);\r\n            },\r\n            method: _ => responder.getMethod().toLowerCase(),\r\n            route: _ => server.findRoute(this.method, this.url.pathname),\r\n            params: _ => this.route.parseParams(this.url.pathname)\r\n        });\r\n\r\n        cached.all(this, {}, {\r\n            _entity: async _ =>{\r\n                const { entity } = this.params;\r\n                if (await this.filter(entity)) { return this.model.findEntity(entity); }\r\n                throw { code:403, msg:`Forbidden` };\r\n            },\r\n            _options: async _ => _fetchOptions(this.url, this.params, (await this._entity).primaryKey),\r\n            _requestBodyRaw: async _=>responder.getBody(),\r\n            _responseBodyRaw: async _=>{\r\n                const { action } = this.route;\r\n                if (adapter[action]) { return adapter[action](this); }\r\n                throw { code:501, msg:`Action '${action}' is not implemented` };\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    getScope(ids, quote = \"\") {\r\n        const { gw:{url}, params:{entity} } = this;\r\n        return url + \"/\" + getScope(entity, ids, quote);\r\n    }\r\n\r\n    getScopeMeta(ids, quote = \"\") {\r\n        const { gw:{url}, params:{entity} } = this;\r\n        return url + \"/\" + getScopeMeta(entity, ids, quote);\r\n    }\r\n\r\n    getScopeMetaEntity(ids, quote = \"\") {\r\n        return this.getScopeMeta(ids, quote)+\"/$entity\";\r\n    }\r\n\r\n    async fetchEntity() {\r\n        return this._entity;\r\n    }\r\n\r\n    async fetchOptions() {\r\n        return this._options;\r\n    }\r\n\r\n    async fetchRequestBodyRaw() {\r\n        return this._requestBodyRaw;\r\n    }\r\n\r\n    async fetchResponseBodyRaw() {\r\n        return this._responseBodyRaw;\r\n    }\r\n\r\n    async pullRequestBody(to={}) {\r\n        return pullBody(await this.fetchRequestBodyRaw(), \"toAdapter\", this, to);\r\n    }\r\n\r\n    async pullResponseBody(to={}) {\r\n        return pullBody(await this.fetchResponseBodyRaw(), \"toResponse\", this, to);\r\n    }\r\n\r\n}", "import parser from 'odata-parser';\r\nimport querystring from 'querystring';\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nimport { unwrap } from \"../tools\";\r\nimport { allowedQueryOptions } from '../consts';\r\n\r\n\r\n// odata parser returns ['null', ''] for a filter with \"field eq null\"\r\n// we handle the case by fixing the query in case this happens\r\nconst filterBug = val=>(Array.isArray(val) && val.length === 2 && val[0] === 'null' && val[1] === '') ? null : val;\r\n\r\nconst parseOp = (op, left, right, func, args)=>{\r\n  const r = op || [];\r\n  r.push(parseNode(left, func, args));\r\n  r.push(parseNode(right, func, args));\r\n  return r;\r\n}\r\n\r\nconst parseSort = orderBy => {\r\n  const r = {};\r\n  if (!orderBy) { return r; }\r\n  for (const prop of orderBy) {\r\n    const propName = Object.keys(prop)[0];\r\n    r[propName] = prop[propName] === 'desc' ? -1 : 1;\r\n  }\r\n  return r;\r\n}\r\n\r\nconst parseSelect = select => {\r\n  const r = {};\r\n  if (!select) { return r; }\r\n  for (const prop of select) { r[prop] = 1; }\r\n  return r;\r\n}\r\n\r\nconst parseFilter = filter => {\r\n  if (!filter) { return {}; }\r\n  const { type, left, right, func, args } = filter;\r\n  return parseNode({ type, left, right }, func, args);\r\n}\r\n\r\n\r\nconst substringof = (args, result) => {\r\n\r\n  const prop = args[0].type === 'property' ? args[0] : args[1];\r\n  const lit = args[0].type === 'literal' ? args[0] : args[1];\r\n\r\n  result[prop.name] = new RegExp(lit.value);\r\n}\r\n\r\nconst _pushProp = (result, left, rightValue) => {\r\n  if (left.type !== 'property' || left.name.indexOf('/') === -1) { return result[left.name] = rightValue; }\r\n\r\n  const fragments = left.name.split('/');\r\n  const obj = result[fragments[0]] || {};\r\n\r\n  for (let i = 1; i < fragments.length; i++) {\r\n    if (i === (fragments.length - 1)) {\r\n      obj[fragments[i]] = rightValue\r\n    } else {\r\n      obj[fragments[i]] = obj[fragments[i]] || {}\r\n    }\r\n  }\r\n\r\n  return result[fragments[0]] = obj;\r\n}\r\n\r\nconst parseNode = ({ type, left, right }, func, args) => {\r\n  const result = {};\r\n  const pushProp = rightValue=>_pushProp(result, left, rightValue);\r\n\r\n  if (right.type === \"literal\") {\r\n    if (type === 'eq') { pushProp(filterBug(right.value)); }\r\n    if (type === 'lt') { pushProp({ $lt: right.value }); }\r\n    if (type === 'gt') { pushProp({ $gt: right.value }); }\r\n    if (type === 'le') { pushProp({ $lte: right.value }); }\r\n    if (type === 'ge') { pushProp({ $gte: right.value }); }\r\n    if (type === 'ne') { pushProp({ $ne:filterBug(right.value) }); }\r\n  }\r\n\r\n  if (type === 'and') { result.$and = parseOp(result.$and, left, right, func, args); }\r\n  if (type === 'or') { result.$or = parseOp(result.$or, left, right, func, args); }\r\n  if (type === 'functioncall') {\r\n    switch (func) {\r\n      case 'substringof': substringof(args, result)\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nconst parseQuery = (url) => {\r\n  let search = url.search;\r\n  if (!search) { return; }\r\n\r\n  let query = {};\r\n  for (let k in url.query) {\r\n    if (allowedQueryOptions.includes(k)) { query[k] = url.query[k]; }\r\n  }\r\n\r\n  //workaround v4 => v3\r\n  if (Boolean.jet.to(query.$count)) {\r\n    query[\"$inlinecount\"] = \"allpages\";\r\n\r\n    delete query.$count;\r\n    search = querystring.stringify(query);\r\n\r\n    if (!search) { return; }\r\n  }\r\n\r\n  search = decodeURIComponent((unwrap(search, \"?\") || search).replace(/\\+/g, \" \"));\r\n  \r\n  query = search ? parser.parse(search) : {};\r\n\r\n  if (query.$inlinecount != null) {\r\n    query.$count = true;\r\n    delete query.$inlinecount;\r\n  }\r\n\r\n  if (query.$top) { query.$limit = query.$top; }\r\n\r\n  query.$sort = parseSort(query.$orderby);\r\n  query.$filter = parseFilter(query.$filter);\r\n  query.$select = parseSelect(query.$select);\r\n\r\n  return query;\r\n}\r\n\r\n\r\n\r\nexport const _fetchOptions = (url, params, primaryKey) => {\r\n  const query = parseQuery(url) || { $filter: {} };\r\n\r\n  if (params.count) { query.$count = true; }\r\n  if (params.id) { query.$filter[primaryKey] = params.id; }\r\n\r\n  return query;\r\n}", "import { unwrap } from \"./tools\";\r\n\r\nconst _tsPattern = /^P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+S)?)?$/;\r\nconst _tsList = [\r\n    { unit: \"D\", factor: 86400000, group: \"\", patternIndex: 1 },\r\n    { unit: \"H\", factor: 3600000, group: \"T\", patternIndex: 3 },\r\n    { unit: \"M\", factor: 60000, group: \"T\", patternIndex: 4 },\r\n    { unit: \"S\", factor: 1000, group: \"T\", patternIndex: 5 }\r\n];\r\n\r\nexport const msToTimespan = (milliseconds, quoteLeft = \"duration'\", quoteRight = \"'\") => {\r\n    if (typeof milliseconds !== \"number\" || isNaN(milliseconds) || milliseconds < 0) { return; }\r\n    let rest = milliseconds;\r\n    let duration = \"P\";\r\n    let groupCurrent = \"\";\r\n\r\n    for (const { unit, factor, group } of _tsList) {\r\n        const value = Math.floor(rest / factor);\r\n        rest %= factor;\r\n        if (value <= 0) { continue; }\r\n        if (group !== groupCurrent) { duration += (groupCurrent = group); }\r\n        duration += `${value}${unit}`;\r\n    };\r\n\r\n    return quoteLeft + duration + quoteRight;\r\n};\r\n\r\nexport const timespanToMs = (timespan = \"\", quoteLeft = \"duration'\", quoteRight = \"'\") => {\r\n    const m = unwrap(timespan, quoteLeft, quoteRight).match(_tsPattern);\r\n    if (!m?.length) { return; }\r\n\r\n    let ms = 0;\r\n    for (const { factor, patternIndex } of _tsList) {\r\n        const value = parseInt(m[patternIndex], 10);\r\n        if (!isNaN(value)) { ms += value * factor; }\r\n    };\r\n    return ms;\r\n}\r\n\r\n\r\n// const durationExamples = [\r\n//   null,\r\n//   \"duration'P2DT4H30M'\",\r\n//   \"duration'PT10H15M'\",\r\n//   \"duration'PT45M'\",\r\n//   \"duration'P7DT2H'\",\r\n//   \"duration'PT1H30M20S'\",\r\n//   \"duration'P3D'\",\r\n//   \"duration'PT2M'\",\r\n//   \"duration'P1DT12H45M'\",\r\n//   \"duration'PT5S'\",\r\n//   \"duration'PT8H'\",\r\n//   \"duration'P4DT6H10M'\",\r\n//   \"duration'PT30M'\",\r\n//   \"duration'PT1S'\",\r\n//   \"duration'P2DT23H59M59S'\",\r\n//   \"duration'PT20M'\",\r\n//   \"duration'P1DT1H'\",\r\n//   \"duration'PT15S'\",\r\n//   \"duration'PT2H30M'\",\r\n//   \"duration'P5D'\",\r\n//   \"duration'PT10S'\"\r\n// ];\r\n\r\n// console.log(durationExamples.map(e=>[e, timespanToMs(e), msToTimespan(timespanToMs(e)), msToTimespan(timespanToMs(e)) === e]));", "import { Server } from \"./class/Server.js\";\r\nimport { msToTimespan, timespanToMs } from \"./converters.js\";\r\n\r\nexport default (options)=>new Server(options);\r\n\r\nexport {\r\n    Server,\r\n    timespanToMs,\r\n    msToTimespan\r\n}\r\n", "import { ObjectId } from \"mongodb\";\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nconst { solid } = jet.prop;\r\n\r\nexport class MongoAdapter {\r\n\r\n    constructor(connect) {\r\n        solid(this, \"connect\", connect, false);\r\n    }\r\n\r\n    optValidator(val, fk, pk, key) { return (key === \"_id\") ? ObjectId(val) : val; }\r\n    optValidate(o) { return jet.map(o, this.optValidator.bind(this), true); }\r\n\r\n    async getDB(context) {\r\n        return (await this.connect(context)).db(context.model.namespace);\r\n    }\r\n\r\n    async getCollection(context) {\r\n        return (await this.getDB(context)).collection(context.params.entity);\r\n    }\r\n\r\n    async remove(context) {\r\n        const options = await context.fetchOptions();\r\n        const { $filter } = this.optValidate({ $filter:options.$filter });\r\n\r\n        const col = await this.getCollection(context);\r\n        const res = await col.deleteOne($filter);\r\n    \r\n        return res.deletedCount;\r\n    }\r\n    \r\n    async update(context) {\r\n        const options = await context.fetchOptions();\r\n        const { $filter } = this.optValidate({ $filter:options.$filter });\r\n\r\n        const col = await this.getCollection(context);\r\n        const res = await col.updateOne($filter, {$set:await context.pullRequestBody({})});\r\n    \r\n        return res.matchedCount;\r\n    }\r\n    \r\n    async insert(context) {\r\n        const { primaryKey } = await context.fetchEntity();\r\n        const body = await context.pullRequestBody({});\r\n\r\n        if (primaryKey !== \"_id\" && !body[primaryKey]) { body[primaryKey] = jet.uid(16); }\r\n    \r\n        const col = await this.getCollection(context);\r\n        const value = await col.insertOne(body);\r\n    \r\n        return col.findOne({ _id: value.insertedId });\r\n    }\r\n    \r\n    async query(context) {\r\n        const options = await context.fetchOptions();\r\n        const { $select, $sort, $skip, $limit, $filter } = this.optValidate(options);\r\n\r\n        const col = await this.getCollection(context);\r\n        let qr = col.find($filter, { projection: $select || {} });\r\n    \r\n        if ($sort) { qr = qr.sort($sort); }\r\n        if ($skip) { qr = qr.skip($skip); }\r\n        if ($limit) { qr = qr.limit($limit); }\r\n\r\n        return qr.toArray();\r\n    \r\n    }\r\n\r\n    async count(context) {\r\n        return (await this.query(context)).length;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect=>new MongoAdapter(connect);\r\n", "import jet from \"@randajan/jet-core\";\r\n\r\nconst { solid } = jet.prop;\r\n\r\nexport class ExpressResponder {\r\n\r\n    constructor(request, response) {\r\n        solid.all(this, {request, response});\r\n    }\r\n\r\n    getURL() {\r\n        const req = this.request;\r\n        return req.originalUrl || req.url;\r\n    }\r\n\r\n    getMethod() {\r\n        return this.request.method;\r\n    }\r\n\r\n    async getBody() {\r\n        const req = this.request;\r\n\r\n        if (req.body) { return req.body; }\r\n    \r\n        return new Promise((res, rej) => {\r\n            let body = \"\";\r\n            req.on('data', data => {\r\n                if ((body += data).length > 1e6) { rej({ statusCode: 400, msg: \"Request is too long\" }); }\r\n            });\r\n            req.on('end', _ => {\r\n                try { res(body ? JSON.parse(body) : undefined); }\r\n                catch(e) { rej({ statusCode:400, msg:e.message }); }\r\n            });\r\n        });\r\n    }\r\n\r\n    getType() {\r\n        const req = this.request;\r\n        const headers = jet.json.from(req.headers);\r\n        const accept = headers?.accept;\r\n        if (typeof accept !== \"string\") { return; }\r\n        const xml = accept.includes(\"xml\");\r\n        const json = accept.includes(\"json\");\r\n        if (xml !== json) { return xml ? \"xml\" : \"json\"; }\r\n    }\r\n\r\n    setHeader(name, value) {\r\n        this.response.setHeader(name, value);\r\n    }\r\n\r\n    setBody(statusCode, body) {\r\n        const res = this.response;\r\n\r\n        res.statusCode = statusCode;\r\n        res.end(body);\r\n    }\r\n    \r\n}\r\n\r\nexport default (req, res)=>new ExpressResponder(req, res);", "import { info } from \"@randajan/simple-lib/node\";\r\nimport ODataServer from \"../../dist/index.js\";\r\nimport mongoAdapter from \"../../dist/mods/adapter/Mongo.js\";\r\nimport expressResponder from \"../../dist/mods/responder/Express.js\";\r\n\r\nimport { MongoClient } from \"mongodb\";\r\nimport http from \"http\";\r\n\r\n\r\nconst mongo = {\r\n    url:\"mongodb://localhost:27017\",\r\n}\r\n\r\nconst model = {\r\n    namespace: \"main\",\r\n    entityTypes: {\r\n        \"UserType\": {\r\n            \"_id\": {\"type\": \"Edm.String\", key: true},\r\n            \"name\": {\"type\": \"Edm.String\"},            \r\n        }\r\n    },   \r\n    entitySets: {\r\n        \"users\": {\r\n            entityType: \"main.UserType\"\r\n        }\r\n    }\r\n};\r\n\r\nconst getMongo = async context=>{\r\n\r\n    if (!mongo.current) { \r\n        mongo.current = await MongoClient.connect(mongo.url);\r\n        mongo.current.on(\"close\", _=>{ delete mongo.current; });\r\n        process.on(\"exit\", _=>{\r\n            if (mongo.current) { mongo.current.close(); }\r\n        });\r\n    }\r\n    \r\n    return mongo.current;\r\n}\r\n\r\nconst mongoApi = ODataServer({\r\n    model,\r\n    cors:\"*\",\r\n    adapter:mongoAdapter(getMongo),\r\n    // converter:(primitive, value, method, context)=>{\r\n    //     //console.log(primitive, value, method);\r\n    //     console.log(primitive, method, context.test);\r\n    //     return value;\r\n    // },\r\n    filter:async (context, collectionName, propertyName)=>{\r\n        if (context.test === \"test\") { return false; }\r\n        //if (propertyName === \"test\") { return false; }\r\n        //return collectionName !== \"users\";\r\n        return true;\r\n    },\r\n    extender: async (context, test)=>{\r\n\r\n        //console.log(await context.fetchOptions());\r\n        context.test = test;\r\n    }\r\n});\r\n\r\nhttp.createServer(mongoApi.serve(expressResponder, 'http://localhost:1337/odata', \"tesst\")).listen(1337);"],
  "mappings": "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",
  "names": ["define_slib_info_default", "chalkNative", "chalkProps", "v", "Logger", "formater", "chalkInit", "chalk", "self", "msgs", "prop", "_", "logger", "prefixes", "now", "enumerable", "lockObject", "o", "r", "i", "descriptor", "val", "_", "info", "define_slib_info_default", "parentPort", "log", "logger", "info", "parentPort", "msg", "e", "d", "e", "c", "a", "b", "jet", "urlParser", "builder", "pathToRegexp", "parser", "querystring", "solid", "vault", "withBrackets", "val", "quote", "str", "getScope", "entity", "ids", "getScopeMeta", "isWrapped", "prefix", "suffix", "unwrap", "trimUrl", "pathname", "parseUrl", "url", "parseQueryString", "_", "decodeParam", "param", "_knownBodyTypes", "setResponderBody", "responder", "body", "defaultType", "extraType", "type", "out", "collections_exports", "__export", "collections_default", "context", "model", "collections", "name", "cors_exports", "cors_default", "count_exports", "count_default", "count", "$select", "insert_exports", "insert_default", "primaryKey", "id", "metadata_exports", "metadata_default", "mapProps", "props", "filter", "r", "key", "nullable", "namespace", "entityTypes", "entitySets", "complexTypes", "entityType", "query_exports", "query_default", "params", "$count", "value", "remove_exports", "remove_default", "update_exports", "update_default", "modules", "__default", "filenames", "_prefix", "_suffix", "methods", "actions_default", "index", "cached", "virtual", "Route", "server", "method", "path", "action", "keys", "text", "regex", "ex", "i", "propTypes", "allowedQueryOptions", "convert", "prop", "vals", "subCollection", "isCollection", "complex", "primitive", "v", "ModelProp", "msg", "attrs", "unCollection", "complexName", "ModelEntity", "typeName", "propName", "callback", "byKey", "res", "validateChildDefault", "child", "assignPack", "obj", "childs", "validateChild", "_p", "_msg", "_pull", "to", "ent", "tpv", "pullBody", "toArray", "raw", "createProp", "createEntity", "createType", "Model", "converter", "csr", "t", "fce", "filterBug", "parseOp", "op", "left", "right", "func", "args", "parseNode", "parseSort", "orderBy", "parseSelect", "select", "parseFilter", "substringof", "result", "lit", "_pushProp", "rightValue", "fragments", "pushProp", "parseQuery", "search", "query", "k", "_fetchOptions", "safe", "Context", "gw", "adapter", "property", "urlReq", "urlBase", "Gateway", "options", "extendArgs", "extender", "e", "error", "Server", "cors", "onError", "a", "routes", "list", "route", "src_default", "options", "Server", "ObjectId", "jet", "solid", "MongoAdapter", "connect", "val", "fk", "pk", "key", "o", "context", "options", "$filter", "primaryKey", "body", "col", "value", "$select", "$sort", "$skip", "$limit", "qr", "Mongo_default", "jet", "solid", "ExpressResponder", "request", "response", "req", "res", "rej", "body", "data", "_", "e", "accept", "xml", "json", "name", "value", "statusCode", "Express_default", "MongoClient", "http", "mongo", "model", "getMongo", "context", "_", "mongoApi", "Po", "m", "collectionName", "propertyName", "test", "h"]
}
