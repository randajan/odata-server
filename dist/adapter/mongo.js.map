{
  "version": 3,
  "sources": ["../../src/adapter/mongo.js"],
  "sourcesContent": ["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nconst { solid, cached } = jet.prop;\r\n\r\nconst _methodsArgs = {\r\n    update: [\"collectionName\", \"query\", \"data\", \"request\", \"callback\"],\r\n    remove: [\"collectionName\", \"query\", \"request\", \"callback\"],\r\n    insert: [\"collectionName\", \"data\", \"request\", \"callback\"],\r\n    query: [\"collectionName\", \"query\", \"request\", \"callback\"]\r\n};\r\n\r\nconst _fetchContext = (methodName, args) => {\r\n    const context = solid.all({}, { methodName });\r\n    const methodArgs = _methodsArgs[methodName];\r\n\r\n    for (let k in methodArgs) {\r\n        const arg = args[k];\r\n        const argName = methodArgs[k];\r\n        const enumerable = (argName !== \"request\" && argName !== \"callback\");\r\n        solid(context, argName, arg, enumerable);\r\n    }\r\n\r\n    return context;\r\n}\r\n\r\nconst _hexTest = /^[0-9A-Fa-f]{24}$/;\r\nconst _convertStringsToObjectIds = o => {\r\n    if (!Object.jet.is(o)) { return o; }\r\n\r\n    for (var i in o) {\r\n        if (i === '_id' && String.jet.is(o[i]) && _hexTest.test(o[i])) { o[i] = new ObjectId(o[i]); }\r\n        else { o[i] = _convertStringsToObjectIds(o[i]); }\r\n    }\r\n\r\n    return o;\r\n};\r\n\r\nconst update = async (collection, { query, data }) => {\r\n    if (data.$set) { delete data.$set._id; } //idk why, it was in source code\r\n\r\n    const res = await collection.updateOne(query, data);\r\n\r\n    if (res.matchedCount !== 1) { throw Error('Update not successful'); }\r\n\r\n    return res.matchedCount;\r\n}\r\n\r\nconst remove = async (collection, { query }) => {\r\n\r\n    const res = await collection.deleteOne(query);\r\n\r\n    if (res.deletedCount !== 1) { throw Error('Remove not successful'); }\r\n\r\n    return res.deletedCount;\r\n\r\n}\r\n\r\nconst insert = async (collection, { data }) => {\r\n\r\n    const value = await collection.insertOne(data);\r\n\r\n    return collection.findOne({ _id: value.insertedId });\r\n\r\n}\r\n\r\nconst query = async (collection, { query }) => {\r\n\r\n    let qr = collection.find(query.$filter, { projection: query.$select || {} });\r\n\r\n    if (query.$sort) { qr = qr.sort(query.$sort); }\r\n    if (query.$skip) { qr = qr.skip(query.$skip); }\r\n    if (query.$limit) { qr = qr.limit(query.$limit); }\r\n    if (query.$count) { return qr.count(); }\r\n\r\n    const value = await qr.toArray();\r\n\r\n    if (!query.$inlinecount) { return value; }\r\n\r\n    const count = await collection.find(query.$filter).count();\r\n\r\n    return { count, value };\r\n\r\n}\r\n\r\nconst _methods = { update, remove, query, insert };\r\n\r\nexport default getDB=>{\r\n    \r\n    return async (methodName, req)=>{\r\n        const method = _methods[methodName];\r\n        if (!method) { throw Error(`Unknown method '${methodName}'`); }\r\n\r\n        //const { collectionName, query, data, callback } = context;\r\n        const db = await getDB();\r\n        //const collection = db.collection(collectionName);\r\n    \r\n        //_convertStringsToObjectIds(query);\r\n        //_convertStringsToObjectIds(data);\r\n    \r\n        //return method(collection, req);\r\n    }\r\n\r\n}\r\n"],
  "mappings": ";AAAA,SAAS,aAAa,gBAAgB;AACtC,OAAO,SAAS;AAEhB,IAAM,EAAE,OAAO,OAAO,IAAI,IAAI;AAmC9B,IAAM,SAAS,OAAO,YAAY,EAAE,OAAAA,QAAO,KAAK,MAAM;AAClD,MAAI,KAAK,MAAM;AAAE,WAAO,KAAK,KAAK;AAAA,EAAK;AAEvC,QAAM,MAAM,MAAM,WAAW,UAAUA,QAAO,IAAI;AAElD,MAAI,IAAI,iBAAiB,GAAG;AAAE,UAAM,MAAM,uBAAuB;AAAA,EAAG;AAEpE,SAAO,IAAI;AACf;AAEA,IAAM,SAAS,OAAO,YAAY,EAAE,OAAAA,OAAM,MAAM;AAE5C,QAAM,MAAM,MAAM,WAAW,UAAUA,MAAK;AAE5C,MAAI,IAAI,iBAAiB,GAAG;AAAE,UAAM,MAAM,uBAAuB;AAAA,EAAG;AAEpE,SAAO,IAAI;AAEf;AAEA,IAAM,SAAS,OAAO,YAAY,EAAE,KAAK,MAAM;AAE3C,QAAM,QAAQ,MAAM,WAAW,UAAU,IAAI;AAE7C,SAAO,WAAW,QAAQ,EAAE,KAAK,MAAM,WAAW,CAAC;AAEvD;AAEA,IAAM,QAAQ,OAAO,YAAY,EAAE,OAAAA,OAAM,MAAM;AAE3C,MAAI,KAAK,WAAW,KAAKA,OAAM,SAAS,EAAE,YAAYA,OAAM,WAAW,CAAC,EAAE,CAAC;AAE3E,MAAIA,OAAM,OAAO;AAAE,SAAK,GAAG,KAAKA,OAAM,KAAK;AAAA,EAAG;AAC9C,MAAIA,OAAM,OAAO;AAAE,SAAK,GAAG,KAAKA,OAAM,KAAK;AAAA,EAAG;AAC9C,MAAIA,OAAM,QAAQ;AAAE,SAAK,GAAG,MAAMA,OAAM,MAAM;AAAA,EAAG;AACjD,MAAIA,OAAM,QAAQ;AAAE,WAAO,GAAG,MAAM;AAAA,EAAG;AAEvC,QAAM,QAAQ,MAAM,GAAG,QAAQ;AAE/B,MAAI,CAACA,OAAM,cAAc;AAAE,WAAO;AAAA,EAAO;AAEzC,QAAM,QAAQ,MAAM,WAAW,KAAKA,OAAM,OAAO,EAAE,MAAM;AAEzD,SAAO,EAAE,OAAO,MAAM;AAE1B;AAEA,IAAM,WAAW,EAAE,QAAQ,QAAQ,OAAO,OAAO;AAEjD,IAAO,gBAAQ,WAAO;AAElB,SAAO,OAAO,YAAY,QAAM;AAC5B,UAAM,SAAS,SAAS;AACxB,QAAI,CAAC,QAAQ;AAAE,YAAM,MAAM,mBAAmB,aAAa;AAAA,IAAG;AAG9D,UAAM,KAAK,MAAM,MAAM;AAAA,EAO3B;AAEJ;",
  "names": ["query"]
}
