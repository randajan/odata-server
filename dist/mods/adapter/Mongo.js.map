{
  "version": 3,
  "sources": ["../../../src/mods/adapter/Mongo.js"],
  "sourcesContent": ["import { ObjectId } from \"mongodb\";\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nconst { solid } = jet.prop;\r\n\r\nexport class MongoAdapter {\r\n\r\n    constructor(connect) {\r\n        solid(this, \"connect\", connect, false);\r\n    }\r\n\r\n    optValidator(val, fk, pk, key) { return (key === \"_id\") ? ObjectId(val) : val; }\r\n    optValidate(o) { return jet.map(o, this.optValidator.bind(this), true); }\r\n\r\n    async getDB(context) {\r\n        return (await this.connect(context)).db(context.model.namespace);\r\n    }\r\n\r\n    async getCollection(context) {\r\n        return (await this.getDB(context)).collection(context.params.entity);\r\n    }\r\n\r\n    async remove(context) {\r\n        const options = await context.fetchOptions();\r\n        const { $filter } = this.optValidate({ $filter:options.$filter });\r\n\r\n        const col = await this.getCollection(context);\r\n        const res = await col.deleteOne($filter);\r\n    \r\n        return res.deletedCount;\r\n    }\r\n    \r\n    async update(context) {\r\n        const options = await context.fetchOptions();\r\n        const { $filter } = this.optValidate({ $filter:options.$filter });\r\n\r\n        const col = await this.getCollection(context);\r\n        const res = await col.updateOne($filter, {$set:await context.pullRequestBody({})});\r\n    \r\n        return res.matchedCount;\r\n    }\r\n    \r\n    async insert(context) {\r\n        const { primaryKey } = await context.fetchEntity();\r\n        const body = await context.pullRequestBody({});\r\n\r\n        if (primaryKey !== \"_id\" && !body[primaryKey]) { body[primaryKey] = jet.uid(16); }\r\n    \r\n        const col = await this.getCollection(context);\r\n        const value = await col.insertOne(body);\r\n    \r\n        return col.findOne({ _id: value.insertedId });\r\n    }\r\n    \r\n    async query(context) {\r\n        const options = await context.fetchOptions();\r\n        const { $select, $sort, $skip, $limit, $filter } = this.optValidate(options);\r\n\r\n        const col = await this.getCollection(context);\r\n        let qr = col.find($filter, { projection: $select || {} });\r\n    \r\n        if ($sort) { qr = qr.sort($sort); }\r\n        if ($skip) { qr = qr.skip($skip); }\r\n        if ($limit) { qr = qr.limit($limit); }\r\n\r\n        return qr.toArray();\r\n    \r\n    }\r\n\r\n    async count(context) {\r\n        return (await this.query(context)).length;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect=>new MongoAdapter(connect);\r\n"],
  "mappings": "gCAAA,OAAS,YAAAA,MAAgB,UACzB,OAAOC,MAAS,qBAEhB,GAAM,CAAE,MAAAC,CAAM,EAAID,EAAI,KAETE,EAAN,KAAmB,CAEtB,YAAYC,EAAS,CACjBF,EAAM,KAAM,UAAWE,EAAS,EAAK,CACzC,CAEA,aAAaC,EAAKC,EAAIC,EAAIC,EAAK,CAAE,OAAQA,IAAQ,MAASR,EAASK,CAAG,EAAIA,CAAK,CAC/E,YAAYI,EAAG,CAAE,OAAOR,EAAI,IAAIQ,EAAG,KAAK,aAAa,KAAK,IAAI,EAAG,EAAI,CAAG,CAExE,MAAM,MAAMC,EAAS,CACjB,OAAQ,MAAM,KAAK,QAAQA,CAAO,GAAG,GAAGA,EAAQ,MAAM,SAAS,CACnE,CAEA,MAAM,cAAcA,EAAS,CACzB,OAAQ,MAAM,KAAK,MAAMA,CAAO,GAAG,WAAWA,EAAQ,OAAO,MAAM,CACvE,CAEA,MAAM,OAAOA,EAAS,CAClB,IAAMC,EAAU,MAAMD,EAAQ,aAAa,EACrC,CAAE,QAAAE,CAAQ,EAAI,KAAK,YAAY,CAAE,QAAQD,EAAQ,OAAQ,CAAC,EAKhE,OAFY,MADA,MAAM,KAAK,cAAcD,CAAO,GACtB,UAAUE,CAAO,GAE5B,YACf,CAEA,MAAM,OAAOF,EAAS,CAClB,IAAMC,EAAU,MAAMD,EAAQ,aAAa,EACrC,CAAE,QAAAE,CAAQ,EAAI,KAAK,YAAY,CAAE,QAAQD,EAAQ,OAAQ,CAAC,EAKhE,OAFY,MADA,MAAM,KAAK,cAAcD,CAAO,GACtB,UAAUE,EAAS,CAAC,KAAK,MAAMF,EAAQ,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAEtE,YACf,CAEA,MAAM,OAAOA,EAAS,CAClB,GAAM,CAAE,WAAAG,CAAW,EAAI,MAAMH,EAAQ,YAAY,EAC3CI,EAAO,MAAMJ,EAAQ,gBAAgB,CAAC,CAAC,EAEzCG,IAAe,OAAS,CAACC,EAAKD,CAAU,IAAKC,EAAKD,CAAU,EAAIZ,EAAI,IAAI,EAAE,GAE9E,IAAMc,EAAM,MAAM,KAAK,cAAcL,CAAO,EACtCM,EAAQ,MAAMD,EAAI,UAAUD,CAAI,EAEtC,OAAOC,EAAI,QAAQ,CAAE,IAAKC,EAAM,UAAW,CAAC,CAChD,CAEA,MAAM,MAAMN,EAAS,CACjB,IAAMC,EAAU,MAAMD,EAAQ,aAAa,EACrC,CAAE,QAAAO,EAAS,MAAAC,EAAO,MAAAC,EAAO,OAAAC,EAAQ,QAAAR,CAAQ,EAAI,KAAK,YAAYD,CAAO,EAGvEU,GADQ,MAAM,KAAK,cAAcX,CAAO,GAC/B,KAAKE,EAAS,CAAE,WAAYK,GAAW,CAAC,CAAE,CAAC,EAExD,OAAIC,IAASG,EAAKA,EAAG,KAAKH,CAAK,GAC3BC,IAASE,EAAKA,EAAG,KAAKF,CAAK,GAC3BC,IAAUC,EAAKA,EAAG,MAAMD,CAAM,GAE3BC,EAAG,QAAQ,CAEtB,CAEA,MAAM,MAAMX,EAAS,CACjB,OAAQ,MAAM,KAAK,MAAMA,CAAO,GAAG,MACvC,CAEJ,EAGOY,EAAQlB,GAAS,IAAID,EAAaC,CAAO",
  "names": ["ObjectId", "jet", "solid", "MongoAdapter", "connect", "val", "fk", "pk", "key", "o", "context", "options", "$filter", "primaryKey", "body", "col", "value", "$select", "$sort", "$skip", "$limit", "qr", "Mongo_default"]
}
