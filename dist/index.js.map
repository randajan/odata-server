{
  "version": 3,
  "sources": ["../src/class/Server.js", "../src/tools.js", "../src/class/Route.js", "../src/actions/resolvers/collections.js", "../src/actions/resolvers/count.js", "../src/actions/resolvers/insert.js", "../src/parsers/types.js", "../src/actions/resolvers/metadata.js", "../src/actions/resolvers/query.js", "../src/actions/resolvers/remove.js", "../src/actions/resolvers/update.js", "import-glob:./resolvers/**", "../src/actions/index.js", "../src/class/Context.js", "../src/parsers/options.js", "../src/parsers/inputs.js", "../src/class/Model.js", "../src/class/ModelProp.js", "../src/consts.js", "../src/class/ModelEntity.js", "../src/index.js"],
  "sourcesContent": ["import { Buffer } from \"safe-buffer\";\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nimport { escapeRegExp, vault } from \"../tools\";\r\n\r\nimport { Route } from \"./Route\";\r\n\r\nimport { Context } from \"./Context\";\r\nimport { Model } from \"./Model\";\r\nimport { knownActions } from \"../consts\";\r\n\r\nconst { solid, virtual, cached } = jet.prop;\r\n\r\nexport class Server {\r\n  constructor(config={}) {\r\n\r\n    const { url, model, cors, adapter, converter } = config;\r\n\r\n    const [ uid, _p ] = vault.set({\r\n      url,\r\n      cors,\r\n      routes:{},\r\n      adapter\r\n    });\r\n\r\n    solid.all(this, {\r\n      uid\r\n    }, false);\r\n\r\n    virtual.all(this, {\r\n      url:_=>_p.url,\r\n      resolver:_=>this.resolve.bind(this)\r\n    });\r\n\r\n    cached(this, _p, \"model\", _=>new Model(this, model, converter));\r\n\r\n    this.addRoute(\"get\", '/', \"collections\");\r\n    this.addRoute(\"get\", '/\\$metadata', \"metadata\");\r\n\r\n    this.addRoute(\"get\", '/:collection/\\$count', \"count\");\r\n    this.addRoute(\"get\", '/:collection\\\\(:id\\\\)', \"query\");\r\n    this.addRoute(\"get\", '/:collection', \"query\");\r\n\r\n    this.addRoute(\"patch\", '/:collection\\\\(:id\\\\)', \"update\");\r\n    this.addRoute(\"delete\", '/:collection\\\\(:id\\\\)', \"remove\");\r\n    this.addRoute(\"post\", '/:collection', \"insert\");\r\n\r\n    if (cors) { this.addRoute(\"options\", '/(.*)', ()=>{}); }\r\n\r\n  }\r\n\r\n  msg(text) {\r\n    return \"ODataServer: \" + text;\r\n  }\r\n\r\n  addRoute(method, path, action) {\r\n    const { routes } = vault.get(this.uid);\r\n    const list = routes[method] || (routes[method] = []);\r\n    const route = new Route(method, path, action);\r\n    list.push(route);\r\n    return route;\r\n  }\r\n\r\n  findRoute(method, path) {\r\n    const _p = vault.get(this.uid);\r\n    const routes = _p.routes[method] || [];\r\n\r\n    for (const route of routes) {\r\n      if (route.test(path)) { return route; }\r\n    }\r\n\r\n    throw { code: 404, msg: \"Not found\" };\r\n  }\r\n\r\n  async resolve(req, res) {\r\n    try {\r\n      const _p = vault.get(this.uid);\r\n\r\n      if (!_p.url && !req.protocol) {\r\n        throw Error(this.text('Unable to determine server url from the request or value provided in the ODataServer constructor.'))\r\n      }\r\n    \r\n      // If mounted in express, trim off the subpath (req.url) giving us just the base path\r\n      const path = (req.originalUrl || '/').replace(new RegExp(escapeRegExp(req.url) + '$'), '')\r\n      if (!_p.url) { _p.url = (req.protocol + '://' + req.get('host') + path); };\r\n\r\n      const context = new Context(this, req);\r\n\r\n      res.setHeader('OData-Version', '4.0');\r\n      res.setHeader('DataServiceVersion', '4.0');\r\n      if (_p.cors) { res.setHeader('Access-Control-Allow-Origin', _p.cors); }\r\n\r\n      const { action, resolver } = context.route;\r\n\r\n      if (action === \"count\") { solid(context.params, \"count\", true); }\r\n\r\n      if (!knownActions.includes(action)) { await resolver(req, res); return; }\r\n      if (!_p.adapter[action]) { throw {code:501, msg:\"Not Implemented\"}; }\r\n      \r\n      await resolver(req, res, await _p.adapter[action](context));\r\n\r\n    } catch(e) {\r\n\r\n        const error = {\r\n          code:e?.code || 500,\r\n          message: e?.msg || e?.message || \"Unknown error\",\r\n          stack: e?.stack,\r\n          method: req.method,\r\n          target: req.url,\r\n          details: []\r\n        }\r\n\r\n        res.statusCode = error.code;\r\n        res.setHeader('Content-Type', 'application/json');\r\n\r\n        res.end(JSON.stringify({ error }))\r\n\r\n    }\r\n\r\n  }\r\n\r\n}\r\n", "\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nexport const vault = jet.vault(\"ODataServer\");\r\n\r\n\r\nexport const escapeRegExp = str=>str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\r\n\r\nexport const withBrackets = (val, quote=\"\")=>{\r\n    const str = String.jet.to(val, quote+\",\"+quote);\r\n    return str ? \"(\"+quote+str+quote+\")\" : \"\";\r\n}\r\n\r\nexport const getScope = (collection, ids, quote=\"\")=>collection + withBrackets(ids, quote);\r\nexport const getScopeMeta = (collection, ids, quote=\"\")=>\"$metadata#\"+getScope(collection, ids, quote);\r\n\r\n\r\nexport const isWrapped = (str, prefix=\"\", suffix=\"\")=>typeof str === \"string\" ? str.startsWith(prefix) && str.endsWith(suffix) : false;\r\nexport const unwrap = (str, prefix=\"\", suffix=\"\")=>isWrapped(str = String.jet.to(str), prefix, suffix) ? str.slice(prefix.length, str.length - suffix.length) : \"\";", "import { pathToRegexp } from 'path-to-regexp';\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nimport actions from \"../actions\";\r\n\r\nconst { solid, cached, virtual } = jet.prop;\r\n\r\nconst decodeParam = param=>param && decodeURIComponent(param).replace(/(^[\"'`]+)|([\"'`]+$)/g, \"\");\r\n\r\nexport class Route {\r\n    constructor(method, path, action) {\r\n\r\n        const keys = [];\r\n\r\n        cached(this, {}, \"regex\", _ => pathToRegexp(path, keys), false);\r\n        virtual(this, \"keys\", _ => { this.regex; return keys; }, false);\r\n\r\n        solid.all(this, {\r\n            method,\r\n            path,\r\n            action,\r\n        });\r\n\r\n        solid(this, \"resolver\", actions[action]);\r\n\r\n        if (!this.resolver) {\r\n            throw Error(`Route action '${action}' is not implemented. Available actions: '${Object.keys(actions).join(\", \")}' `);\r\n        }\r\n\r\n    }\r\n\r\n    test(pathname) {\r\n        return this.regex.test(pathname);\r\n    }\r\n\r\n    parseParams(pathname) {\r\n        const { regex, keys } = this;\r\n        const ex = regex.exec(pathname);\r\n\r\n        if (!ex) { return; }\r\n        const params = {};\r\n\r\n        for (let i = 0; i < keys.length; i++) {\r\n            solid(params, keys[i].name, decodeParam(ex[i + 1]));\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n}", "export default async (req, res) => {\r\n    const { model, url } = req.context.server;\r\n\r\n    const collections = [];\r\n  \r\n    for (const key in model.entitySets) {\r\n      collections.push({\r\n        kind: 'EntitySet',\r\n        name: key,\r\n        url: key,\r\n      });\r\n    }\r\n  \r\n    const out = {\r\n      '@odata.context': `${url}/$metadata`,\r\n      value: collections,\r\n    }\r\n\r\n    res.setHeader('Content-Type', 'application/json');\r\n    res.stateCode = 200;\r\n    res.end(JSON.stringify(out));\r\n}", "import jet from \"@randajan/jet-core\";\r\n\r\n\r\nexport default async (req, res, raw) => {\r\n  const { context } = req;\r\n  const { options:{ $select } } = context;\r\n\r\n  const count = Math.max(0, Number.jet.to(raw));\r\n\r\n  const out = {\r\n    '@odata.context':context.getScopeMeta($select ? Object.keys($select) : \"\"),\r\n    '@odata.count':count,\r\n    value:count\r\n  };\r\n\r\n  res.setHeader('Content-Type', 'application/json;odata.metadata=minimal');\r\n  res.stateCode = 200;\r\n  res.end(JSON.stringify(out));\r\n}\r\n", "import { convertToResponse } from \"../../parsers/types\";\r\n\r\n\r\nexport default async (req, res, raw) => {\r\n  const { context } = req;\r\n  const { props, primaryKey } = context.entity;\r\n\r\n  const id = raw[primaryKey];\r\n\r\n  const out = {};\r\n  out['@odata.context'] = context.getScopeMetaEntity();\r\n  out['@odata.id'] = out['@odata.editLink'] = context.getScope(id, \"'\");\r\n\r\n  Object.assign(out, convertToResponse(props, raw));\r\n\r\n  res.setHeader('Content-Type', 'application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=false;charset=utf-8');\r\n  res.setHeader('Location', context.getScope(encodeURI(id), \"'\"));\r\n  res.statusCode = 201;\r\n\r\n  res.end(JSON.stringify(out));\r\n  \r\n};\r\n\r\n\r\n", "import jet from \"@randajan/jet-core\";\r\n\r\nconst { cached } = jet.prop;\r\n\r\nconst validateChildDefault = (model, msg, name, child)=>child;\r\n\r\nexport const assignPack = (obj, model, msg, name, childs, validateChild)=>{\r\n    const _p = {};\r\n    const _msg = (text, ...path)=>msg(text, name, ...path);\r\n\r\n    validateChild = validateChild || validateChildDefault;\r\n    childs = Object.jet.to(childs);\r\n    for (let name in childs) {\r\n        const child = childs[name];\r\n        cached(obj, _p, name, _=>validateChild(model, _msg, name, child));\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\nconst convert = (method, props, vals, isOne)=>{\r\n    vals = (!isOne && !Array.isArray(vals)) ? [vals] : vals;\r\n    if (!isOne) { return vals.map(val=>convert(method, props, val, true)); }\r\n    const r = {};\r\n\r\n    if (typeof vals === \"object\") {\r\n        for (let i in vals) {\r\n            const prop = props[i];\r\n            if (!prop) { continue; }\r\n            const val = prop[method](vals[i]);\r\n            if (val !== undefined) { r[i] = val; }\r\n        }\r\n    }\r\n\r\n    return r;\r\n}\r\n\r\nexport const convertToAdapter = (props, vals, isOne=true)=>convert(\"toAdapter\", props, vals, isOne);\r\nexport const convertToResponse = (props, vals, isOne=true)=>convert(\"toResponse\", props, vals, isOne);", "\r\nimport builder from 'xmlbuilder';\r\n\r\nexport const buildMetadata = (model) => {\r\n  const entityTypes = []; \r\n\r\n  for (const typeKey in model.entityTypes) {\r\n    const entityType = {\r\n      '@Name': typeKey,\r\n      Property: []\r\n    }\r\n\r\n    for (const propKey in model.entityTypes[typeKey]) {\r\n      const property = model.entityTypes[typeKey][propKey]\r\n      const finalObject = { '@Name': propKey, '@Type': property.type }\r\n      if (Object.prototype.hasOwnProperty.call(property, 'nullable')) {\r\n        finalObject['@Nullable'] = property.nullable\r\n      }\r\n      entityType.Property.push(finalObject)\r\n\r\n      if (property.key) {\r\n        entityType.Key = {\r\n          PropertyRef: {\r\n            '@Name': propKey\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    entityTypes.push(entityType)\r\n  }\r\n\r\n  const complexTypes = []\r\n  for (const typeKey in model.complexTypes) {\r\n    const complexType = {\r\n      '@Name': typeKey,\r\n      Property: []\r\n    }\r\n\r\n    for (const propKey in model.complexTypes[typeKey]) {\r\n      const property = model.complexTypes[typeKey][propKey]\r\n\r\n      complexType.Property.push({ '@Name': propKey, '@Type': property.type })\r\n    }\r\n\r\n    complexTypes.push(complexType)\r\n  }\r\n\r\n  const container = {\r\n    '@Name': 'Context',\r\n    EntitySet: []\r\n  }\r\n\r\n  for (const setKey in model.entitySets) {\r\n    container.EntitySet.push({\r\n      '@EntityType': model.entitySets[setKey].entityType,\r\n      '@Name': setKey\r\n    })\r\n  }\r\n\r\n  const returnObject = {\r\n    'edmx:Edmx': {\r\n      '@xmlns:edmx': 'http://docs.oasis-open.org/odata/ns/edmx',\r\n      '@Version': '4.0',\r\n      'edmx:DataServices': {\r\n        Schema: {\r\n          '@xmlns': 'http://docs.oasis-open.org/odata/ns/edm',\r\n          '@Namespace': model.namespace,\r\n          EntityType: entityTypes,\r\n          EntityContainer: container\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (complexTypes.length) {\r\n    returnObject['edmx:Edmx']['edmx:DataServices'].Schema.ComplexType = complexTypes\r\n  }\r\n\r\n  return builder.create(returnObject).end({ pretty: true })\r\n}\r\n\r\nexport default async (req, res) => {\r\n  const out = buildMetadata(req.context.server.model);\r\n\r\n  res.setHeader('Content-Type', 'application/xml');\r\n  res.stateCode = 200;\r\n  res.end(out);\r\n\r\n}", "import jet from \"@randajan/jet-core\";\r\nimport { convertToResponse } from \"../../parsers/types\";\r\n\r\n\r\nexport default async (req, res, raw) => {\r\n  const { context } = req;\r\n  const {options:{ $select, $count }, entity:{ props } } = context;\r\n\r\n  let out = {};\r\n\r\n  if (props.hasOwnProperty(\"id\")) {\r\n    out['@odata.context'] = context.getScopeMetaEntity($select ? Object.keys($select) : \"\");\r\n    if (raw.length) { Object.assign(out, convertToResponse(props, raw[0])); }\r\n  } else {\r\n    out['@odata.context'] = context.getScopeMeta($select ? Object.keys($select) : \"\");\r\n    raw = convertToResponse(props, raw, false);\r\n    if ($count) { out['@odata.count'] = raw.length; }\r\n    out.value = raw;\r\n  }\r\n\r\n  res.setHeader('Content-Type', 'application/json;odata.metadata=minimal');\r\n  res.stateCode = 200;\r\n  res.end(JSON.stringify(out));\r\n}\r\n", "export default async (req, res, raw) => {\r\n  res.stateCode = 204;\r\n  res.end();\r\n};", "export default async (req, res, raw) => {\r\n  res.stateCode = 204;\r\n  res.end();\r\n};", "\n        import * as module0 from './resolvers/collections.js';import * as module1 from './resolvers/count.js';import * as module2 from './resolvers/insert.js';import * as module3 from './resolvers/metadata.js';import * as module4 from './resolvers/query.js';import * as module5 from './resolvers/remove.js';import * as module6 from './resolvers/update.js'\n\n        const modules = [module0,module1,module2,module3,module4,module5,module6];\n\n        export default modules;\n        export const filenames = ['./resolvers/collections.js','./resolvers/count.js','./resolvers/insert.js','./resolvers/metadata.js','./resolvers/query.js','./resolvers/remove.js','./resolvers/update.js']\n      ", "import * as files from \"./resolvers/**\";\r\n\r\nconst _prefix = \"./resolvers/\";\r\nconst _suffix = \".js\";\r\n\r\nexport const methods = {};\r\nexport default methods;\r\n\r\nfiles.filenames.forEach((pathname, index)=>{\r\n    const name = pathname.substring(_prefix.length).slice(0, -_suffix.length);\r\n    methods[name] = files.default[index].default;\r\n});", "import { parse as parseUrl } from \"url\";\r\n\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nimport { fetchOptions } from \"../parsers/options\";\r\nimport { fetchBody } from \"../parsers/inputs\";\r\nimport { getScope, getScopeMeta } from \"../tools\";\r\nimport { convertToAdapter } from \"../parsers/types\";\r\n\r\nconst { solid, cached } = jet.prop;\r\n\r\nexport class Context {\r\n    constructor(server, req) {\r\n\r\n        solid(this, \"server\", server);\r\n\r\n        cached.all(this, {}, {\r\n            method: _ => req.method.toLowerCase(),\r\n            url: _ => parseUrl(req.originalUrl || req.url, true),\r\n            route: _ => server.findRoute(this.method, this.url.pathname),\r\n            params: _ => this.route.parseParams(this.url.pathname),\r\n            entity: _ => server.model.findEntity(this.params.collection),\r\n            options: _ => fetchOptions(this.url, this.params, this.entity.primaryKey)\r\n        });\r\n\r\n        let body;\r\n        solid(this, \"getBody\", async (isOne=true)=>convertToAdapter(this.entity.props, body || (body = await fetchBody(req)), isOne));\r\n\r\n        solid(req, \"context\", this);\r\n    }\r\n\r\n    getScope(ids, quote = \"\") {\r\n        const { server:{url}, params:{collection} } = this;\r\n        return url + \"/\" + getScope(collection, ids, quote);\r\n    }\r\n\r\n    getScopeMeta(ids, quote = \"\") {\r\n        const { server:{url}, params:{collection} } = this;\r\n        return url + \"/\" + getScopeMeta(collection, ids, quote);\r\n    }\r\n\r\n    getScopeMetaEntity(ids, quote = \"\") {\r\n        return this.getScopeMeta(ids, quote)+\"/$entity\";\r\n    }\r\n\r\n}", "import parser from 'odata-parser';\r\nimport querystring from 'querystring';\r\nimport jet from \"@randajan/jet-core\";\r\n\r\nconst { solid } = jet.prop;\r\n\r\nconst _allowedQueryOptions = ['$', '$expand', '$filter', '$format', '$select', '$skip', '$top', '$orderby'];\r\n\r\n// odata parser returns ['null', ''] for a filter with \"field eq null\"\r\n// we handle the case by fixing the query in case this happens\r\nconst filterBug = val=>(Array.isArray(val) && val.length === 2 && val[0] === 'null' && val[1] === '') ? null : val;\r\n\r\nconst parseOp = (op, left, right, func, args)=>{\r\n  const r = op || [];\r\n  r.push(parseNode(left, func, args));\r\n  r.push(parseNode(right, func, args));\r\n  return r;\r\n}\r\n\r\nconst parseSort = orderBy => {\r\n  const r = {};\r\n  if (!orderBy) { return r; }\r\n  for (const prop of orderBy) {\r\n    const propName = Object.keys(prop)[0];\r\n    r[propName] = prop[propName] === 'desc' ? -1 : 1;\r\n  }\r\n  return r;\r\n}\r\n\r\nconst parseSelect = select => {\r\n  const r = {};\r\n  if (!select) { return r; }\r\n  for (const prop of select) { r[prop] = 1; }\r\n  return r;\r\n}\r\n\r\nconst parseFilter = filter => {\r\n  if (!filter) { return {}; }\r\n  const { type, left, right, func, args } = filter;\r\n  return parseNode({ type, left, right }, func, args);\r\n}\r\n\r\n\r\nconst substringof = (args, result) => {\r\n\r\n  const prop = args[0].type === 'property' ? args[0] : args[1];\r\n  const lit = args[0].type === 'literal' ? args[0] : args[1];\r\n\r\n  result[prop.name] = new RegExp(lit.value);\r\n}\r\n\r\nconst _pushProp = (result, left, rightValue) => {\r\n  if (left.type !== 'property' || left.name.indexOf('/') === -1) { return result[left.name] = rightValue; }\r\n\r\n  const fragments = left.name.split('/');\r\n  const obj = result[fragments[0]] || {};\r\n\r\n  for (let i = 1; i < fragments.length; i++) {\r\n    if (i === (fragments.length - 1)) {\r\n      obj[fragments[i]] = rightValue\r\n    } else {\r\n      obj[fragments[i]] = obj[fragments[i]] || {}\r\n    }\r\n  }\r\n\r\n  return result[fragments[0]] = obj;\r\n}\r\n\r\nconst parseNode = ({ type, left, right }, func, args) => {\r\n  const result = {};\r\n  const pushProp = rightValue=>_pushProp(result, left, rightValue);\r\n\r\n  if (right.type === \"literal\") {\r\n    if (type === 'eq') { pushProp(filterBug(right.value)); }\r\n    if (type === 'lt') { pushProp({ $lt: right.value }); }\r\n    if (type === 'gt') { pushProp({ $gt: right.value }); }\r\n    if (type === 'le') { pushProp({ $lte: right.value }); }\r\n    if (type === 'ge') { pushProp({ $gte: right.value }); }\r\n    if (type === 'ne') { pushProp({ $ne:filterBug(right.value) }); }\r\n  }\r\n\r\n  if (type === 'and') { result.$and = parseOp(result.$and, left, right, func, args); }\r\n  if (type === 'or') { result.$or = parseOp(result.$or, left, right, func, args); }\r\n  if (type === 'functioncall') {\r\n    switch (func) {\r\n      case 'substringof': substringof(args, result)\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nconst queryTransform = (query) => {\r\n\r\n  if (query.$top) { query.$limit = query.$top; }\r\n\r\n  query.$sort = parseSort(query.$orderby);\r\n  query.$filter = parseFilter(query.$filter);\r\n  query.$select = parseSelect(query.$select);\r\n\r\n  return query;\r\n}\r\n\r\nexport const fetchOptions = (url, params, primaryKey) => {\r\n  const query = url.query;\r\n  let r = { $filter: {} };\r\n\r\n  if (url.search) {\r\n    const queryValid = {}\r\n    for (const opt of _allowedQueryOptions) {\r\n      if (query[opt]) { queryValid[opt] = query[opt]; }\r\n    }\r\n\r\n    if (Boolean.jet.to(query.$count)) { queryValid[\"$inlinecount\"] = \"allpages\"; }\r\n    const encodedQS = decodeURIComponent(querystring.stringify(queryValid));\r\n    if (encodedQS) { r = queryTransform(parser.parse(encodedQS)); }\r\n    if (r.$inlinecount) { r.$count = true; }\r\n    delete r.$inlinecount;\r\n    \r\n  }\r\n\r\n  if (params.count) { r.$count = true; }\r\n  if (params.id) { r.$filter[primaryKey] = params.id; }\r\n\r\n  return r;\r\n}", "import jet from \"@randajan/jet-core\";\r\n\r\nexport const fetchBody = async req => {\r\n    if (req.body) { return req.body; }\r\n\r\n    return new Promise((res, rej) => {\r\n        let body = \"\";\r\n        req.on('data', data => {\r\n            if ((body += data).length > 1e6) { rej({ code: 400, msg: \"Request is too long\" }); }\r\n        });\r\n        req.on('end', _ => {\r\n            try { res(JSON.parse(body)); }\r\n            catch(e) { rej({ code:400, msg:e.message }); }\r\n        });\r\n    });\r\n}", "import jet from \"@randajan/jet-core\";\r\n\r\nimport { ModelProp } from \"./ModelProp\";\r\nimport { ModelEntity } from \"./ModelEntity\";\r\nimport { assignPack } from \"../parsers/types\";\r\n\r\nimport { propTypes } from \"../consts\";\r\nimport { isWrapped, unwrap } from \"../tools\";\r\n\r\nconst { solid } = jet.prop;\r\n\r\nconst createProp = (model, msg, name, attrs)=>new ModelProp(model, msg, name, attrs);\r\nconst createEntity = (model, msg, name, attrs)=>new ModelEntity(model, msg, name, attrs);\r\nconst createType = (model, msg, name, props)=>assignPack({}, model, msg, name, props, createProp);\r\n\r\nexport class Model {\r\n\r\n    constructor(server, model, converter) {\r\n        const { namespace, entityTypes, entitySets, complexTypes } = Object.jet.to(model);\r\n\r\n        solid(this, \"server\", server, false);\r\n        solid(this, \"namespace\", String.jet.to(namespace));\r\n\r\n        if (!this.namespace) { throw Error(this.msg(\"namespace missing\")); }\r\n\r\n        const _msg = this.msg.bind(this);\r\n        solid(this, \"complexTypes\", assignPack({}, this, _msg, \"complexTypes\", complexTypes, createType));\r\n        solid(this, \"entityTypes\", assignPack({}, this, _msg, \"entityTypes\", entityTypes, createType));\r\n        solid(this, \"entitySets\", assignPack({}, this, _msg, \"entitySets\", entitySets, createEntity));\r\n        solid(this, \"converter\", {}, false);\r\n\r\n        const csr = jet.isRunnable(converter);\r\n        if (!csr) { converter = Object.jet.to(converter); }\r\n\r\n        propTypes.map(t=>{\r\n            const fce = csr ? (v, method)=>converter(t, v, method) : jet.isRunnable(converter[t]) ? converter[t] : v=>v;\r\n            solid(this.converter, t, fce);\r\n        });\r\n        \r\n        \r\n    }\r\n\r\n    msg(text, ...path) {\r\n        path = path.join(\".\") || \"\";\r\n        if (path) { path = \".\"+path; }\r\n        return this.server.msg(\"model\" + path + \" \" + text);\r\n    }\r\n\r\n    checkNamespace(str) { return isWrapped(str, this.namespace+\".\"); }\r\n    stripNamespace(str) { return unwrap(str, this.namespace+\".\"); }\r\n\r\n    findEntity(name) {\r\n        const ent = this.entitySets[name];\r\n        if (!ent) { throw Error(this.msg(\"not found!\", \"entitySets\", name)); }\r\n        return ent;\r\n    }\r\n\r\n}", "import jet from \"@randajan/jet-core\";\r\n\r\nimport { propTypes } from \"../consts\";\r\nimport { unwrap } from \"../tools\";\r\n\r\nconst { solid } = jet.prop;\r\n\r\nconst convert = (prop, method, vals, subCollection)=> {\r\n    const { isCollection, complex, primitive, name, model } = prop;\r\n    if (name.startsWith(\"@odata\")) { return; }\r\n\r\n    if (!subCollection && isCollection) {\r\n        return (Array.isArray(vals) ? vals : [vals]).map(v=>convert(prop, method, v, true));\r\n    }\r\n\r\n    if (complex) { return complex[method](vals); }\r\n\r\n    return model.converter[primitive](vals, method);\r\n}\r\n\r\nexport class ModelProp {\r\n\r\n    constructor(model, msg, name, attrs) {\r\n\r\n        solid(this, \"model\", model, false);\r\n        solid(this, \"name\", name);\r\n\r\n        attrs = Object.jet.to(attrs);\r\n        for (const i in attrs) { solid(this, i, attrs[i]); }\r\n\r\n        if (!this.type) { throw Error(msg(`missing!`, name, \"type\")); }\r\n\r\n        const unCollection = unwrap(this.type, \"Collection(\", \")\");\r\n        solid(this, \"isCollection\", !!unCollection);\r\n\r\n        const complexName = unwrap(unCollection || this.type, model.namespace+\".\");\r\n        const complex = model.complexTypes[complexName];\r\n        if (complexName && !complex) { throw Error(msg(`definition missing at 'model.complexTypes.${complexName}'`, name, \"type\")); }\r\n\r\n        solid(this, \"primitive\", complex ? undefined : (unCollection || this.type));\r\n        solid(this, \"complex\", complex);\r\n\r\n        if (!complex && !propTypes.includes(this.primitive)) {\r\n            throw Error(msg(`invalid value '${this.type}' - accepts one of: '${propTypes.join(\", \")}'`, name, \"type\"));\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toAdapter(val) {\r\n        return convert(this, \"toAdapter\", val);\r\n    }\r\n\r\n    toResponse(val) {\r\n        return convert(this, \"toResponse\", val);\r\n    }\r\n\r\n}", "\r\n\r\nexport const propTypes = [\r\n    'Edm.Int16',\r\n    'Edm.Int32',\r\n    'Edm.Int64',\r\n    'Edm.Boolean',\r\n    'Edm.String',\r\n    'Edm.Date',\r\n    'Edm.Single',\r\n    'Edm.Double',\r\n    'Edm.Decimal',\r\n    'Edm.TimeOfDay',\r\n    'Edm.DateTimeOffset',\r\n    'Edm.Byte',\r\n    'Edm.SByte3',\r\n    'Edm.Binary',\r\n];\r\n\r\nexport const knownActions = [\r\n    \"query\",\r\n    \"count\",\r\n    \"insert\",\r\n    \"update\",\r\n    \"remove\"\r\n]", "import jet from \"@randajan/jet-core\";\r\n\r\nimport { unwrap } from \"../tools\";\r\n\r\nconst { solid, cached } = jet.prop;\r\n\r\n\r\nexport class ModelEntity {\r\n\r\n    constructor(model, msg, name, attrs) {\r\n\r\n        solid(this, \"model\", model, false);\r\n        solid(this, \"name\", name);\r\n\r\n        attrs = Object.jet.to(attrs);\r\n        for (const i in attrs) { solid(this, i, attrs[i]); }\r\n\r\n        const entityType = this.entityType;\r\n\r\n        if (!entityType) { throw Error(msg(`missing!`, name, \"entityType\")); }\r\n\r\n        const typeName = unwrap(entityType, model.namespace+\".\");\r\n        if (!typeName) { throw Error(msg(`missing namespace '${ model.namespace }' prefix`, name, \"entityType\")); }\r\n        const props = model.entityTypes[typeName];\r\n        if (!props) { throw Error(msg(`definition missing at 'model.entityTypes.${typeName}'`, name, \"entityType\")); }\r\n\r\n        solid(this, \"props\", props);\r\n\r\n        for (const propName in props) {\r\n            if (!props[propName].key) { continue; }\r\n            if (this.primaryKey) { throw Error(msg(`primaryKey is allready defined as ${this.primaryKey}`, name, propName)); }\r\n            solid(this, \"primaryKey\", propName);\r\n        }\r\n\r\n        if (!this.primaryKey) { throw Error(msg(`primaryKey is missing`, name)); }\r\n\r\n    }\r\n\r\n}", "import { Server } from \"./class/Server.js\";\r\n\r\nexport default (options)=>new Server(options);\r\n\r\nexport {\r\n    Server\r\n}\r\n"],
  "mappings": "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",
  "names": ["Buffer", "jet", "jet", "jet", "jet", "name", "jet", "cached", "jet", "jet", "jet", "solid", "jet", "solid", "cached", "jet", "jet", "jet", "solid", "jet", "convert", "jet", "solid", "cached", "jet", "solid", "jet", "solid", "virtual", "cached", "jet"]
}
